{"version":3,"sources":["components/layout/NavBar/robot.png","components/Card/index.module.css","reducers/notifyReducer.js","store.js","actions/types.js","reducers/settingReducer.js","containers/CreateRobot/index.js","components/Card/card.js","components/CardList/index.js","components/SearchBox/index.js","components/Scroll/index.js","containers/DisplayRobot/index.js","components/layout/Alert/index.js","components/setting/Setting.js","actions/settingAction.js","components/layout/NavBar/NavBarMoblie.js","components/layout/NavBar/NavBarChildren.js","components/layout/NavBar/NavBarDesktop.js","components/layout/NavBar/index.js","containers/Landing/index.js","containers/editRobot/index.js","actions/notifyAction.js","components/auth/Login/Login.js","components/auth/SignUp/SignUp.js","components/errorHandle/index.js","helpers/auth.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","disabledLink","initialState","message","messageType","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","createStoreWithFirebase","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reactReduxFirebase","userProfile","reduxFirestore","composeEnhancers","createStore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","notify","state","arguments","length","undefined","action","type","Object","objectSpread","setting","disableRobotsOnAdd","payload","disableRobotsOnEdit","allowRegistration","localStorage","getItem","setItem","JSON","stringify","store","parse","CreateRobot","onSubmit","values","newRobot","_this$props","_this","props","history","add","collection","then","push","catch","err","console","log","this","react_default","a","createElement","Responsive","Segment","react_final_form_es","initialValues","render","_ref","handleSubmit","form","submitting","pristine","className","Card_Card","fluid","Header","Content","robotId","Placeholder","Image","rectangular","alt","src","concat","name","_ref2","input","meta","build","assign","disabled","color","settings","start","min","max","step","onChange","value","component","placeholder","onClick","reset","Component","firestoreConnect","connect","id","email","notes","Modal","closeIcon","trigger","image","wrapped","size","Description","Link","classNames","to","Button","delete","doc","negative","CardList","robots","cardComponent","_","map","robot","card","key","SearchBox","searchfield","searchChange","Scroll","style","overflow","border","height","children","DisplayRobot","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","_this2","clients","clientNames","client","firstName","lastName","filteredRobots","filter","toLower","includes","components_SearchBox","components_Scroll","components_CardList","Loader","active","ordered","Alert","positive","Setting","_this$props$setting","setDisableRobotsOnAdd","setDisableRobotsOnEdit","setAllowRegistration","Grid","textAlign","verticalAlign","Column","maxWidth","as","Form","Checkbox","label","checked","auth","NavBarMobile","isLogin","onPusherClick","onToggle","visible","onLogoutClick","Sidebar","Pushable","Menu","animation","icon","inverted","direction","vertical","Item","NavLink","react","Pusher","dimmed","fixed","minHeight","position","Icon","NavBarChildren","Container","marginTop","NavBarDesktop","NavBar","isAuthenticated","handlePusher","logout","handleToggle","_this$state","onlyMobile","NavBarMoblie_NavBarMobile","NavBarChildren_NavBarChildren","minWidth","onlyTablet","NavBar_NavBarDesktop","uid","withRouter","firebaseConnect","Landing","editRobot","updatedRobot","update","storeAs","match","params","_ref3","notifyUser","Login","password","login","_this$props$notify","raised","stacked","ui","extra","Input","iconPosition","_ref4","layout_Alert","SignUp","createUser","ErrorHandler","hasError","error","errorInfo","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","ownProps","getRedirectQueryParam","authenticatingSelector","_ref$firebase","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","_ref3$firebase","App","es","BrowserRouter","layout_NavBar","errorHandle","Switch","Route","exact","path","Boolean","location","hostname","ReactDOM","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ed8aff9b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot.388b052a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabledLink\":\"Card_disabledLink__1GjVi\"};","import {NOTIFY_USER } from '../actions/types'\n\nconst initialState ={\n    message:null,\n    messageType:null,\n};\n\n\nexport default function (state = initialState,action) {\n    switch (action.type) {\n        case NOTIFY_USER:\n            return{\n                ...state,\n                message:action.message,\n                messageType: action.messageType,\n            };\n        default:\n            return state;\n    }\n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport settingReducer from \"./reducers/settingReducer\";\nimport notifyReducer from \"./reducers/notifyReducer.js\";\nimport { createStore, combineReducers, compose } from \"redux\";\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\"; // <- needed if using firestore\n// import 'firebase/functions' // <- needed if using httpsCallable\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\"; // <- needed if using firestore\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC6rHHcP2S1RHoKZG8dZrcFIRX_T7Q4klY\",\n  authDomain: \"robot-friend-b4cd3.firebaseapp.com\",\n  databaseURL: \"https://robot-friend-b4cd3.firebaseio.com\",\n  projectId: \"robot-friend-b4cd3\",\n  storageBucket: \"robot-friend-b4cd3.appspot.com\",\n  messagingSenderId: \"202082833271\",\n  appId: \"1:202082833271:web:c1402d43dbc35061\"\n};\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \"users\"\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n};\n\n// Initialize firebase instance\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize other services on firebase instance\nfirebase.firestore(); // <- needed if using firestore\n// firebase.functions() // <- needed if using httpsCallable\n\n// Add reactReduxFirebase enhancer when making store creator\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\nconst createStoreWithFirebase = composeEnhancers(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  reduxFirestore(firebase) // <- needed if using firestore\n)(createStore);\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer, // <- needed if using firestore\n  notify: notifyReducer,\n  setting: settingReducer\n});\n//Check for setting in localStorage\nif(localStorage.getItem('setting')==null){\n    const defaultSetting={\n        disableRobotsOnAdd:true,\n        disableRobotsOnEdit:false,\n        allowRegistration:false,\n    };\n    localStorage.setItem('setting',JSON.stringify(defaultSetting))\n}\n// Create store with reducers and initial state\nconst initialState = {setting:JSON.parse(localStorage.getItem('setting'))};\nconst store = createStoreWithFirebase(\n  rootReducer,\n  initialState,\n\n);\n\nexport default store;\n","export const NOTIFY_USER ='NOTIFY_USER';\nexport const DISABLE_ROBOTS_ON_ADD ='DISABLE_ROBOTS_ON_ADD';\nexport const DISABLE_ROBOTS_ON_EDIT ='DISABLE_ROBOTS_ON_EDIT';\nexport const ALLOW_REGISTRATION ='ALLOW_REGISTRATION';\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  DISABLE_ROBOTS_ON_ADD,\n  DISABLE_ROBOTS_ON_EDIT,\n  ALLOW_REGISTRATION\n} from \"../actions/types\";\n\n\nexport default (state={},action) =>{\n    switch (action.type) {\n        case DISABLE_ROBOTS_ON_ADD:\n            return{\n                ...state,\n                disableRobotsOnAdd: action.payload,\n            };\n        case DISABLE_ROBOTS_ON_EDIT:\n            return{\n                ...state,\n                disableRobotsOnEdit: action.payload,\n            };\n        case ALLOW_REGISTRATION:\n            return{\n                ...state,\n                allowRegistration: action.payload,\n            };\n        default:\n            return state;\n\n    }\n\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Responsive, Segment, Card, Placeholder } from \"semantic-ui-react\";\nimport { Form, Field } from \"react-final-form\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Slider } from \"react-semantic-ui-range\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nclass CreateRobot extends Component {\n  onSubmit = values => {\n    const newRobot = values;\n    const { firestore, history } = this.props;\n    firestore\n      .add({ collection: \"clients\" }, newRobot)\n      .then(history.push(\"/viewRobots\"))\n      .catch(err => console.log(err));\n  };\n  render() {\n      const {disableRobotsOnAdd} = this.props.setting;\n    return (\n      <Responsive>\n        <Segment>\n          <Form\n            onSubmit={this.onSubmit}\n            initialValues={{}}\n            render={({ handleSubmit, form, submitting, pristine, values }) => (\n              <form className=\"ui form\" onSubmit={handleSubmit}>\n                <div className=\"fields\">\n                  <div className=\"six wide field\">\n                    <Card fluid>\n                      <Card.Header>\n                        <label>Robot image</label>\n                      </Card.Header>\n                      <Card.Content>\n                        {values.robotId == undefined ? (\n                          <Placeholder fluid>\n                            {\" \"}\n                            <Placeholder.Image rectangular />{\" \"}\n                          </Placeholder>\n                        ) : (\n                          <img\n                            alt=\"robots\"\n                            src={`https://robohash.org/${\n                              values.robotId\n                            }?bgset=bg1&size=300x300`}\n                          />\n                        )}\n                      </Card.Content>\n                    </Card>\n                  </div>\n                  <div className=\" ten wide field\">\n                    <label>Angriness</label>\n\n                    <Field name=\"robotId\">\n                      {({ input, meta }) => (\n                        <Slider\n                            disabled={disableRobotsOnAdd}\n                          {...input}\n                          color=\"red\"\n                          settings={{\n                            start: 2,\n                            min: 0,\n                            max: 100,\n                            step: 1,\n                            onChange: value => {\n                              input.onChange(value);\n                            }\n                          }}\n                        />\n                      )}\n                    </Field>\n\n                    <label>First Name</label>\n                    <Field\n                        disabled={disableRobotsOnAdd}\n                      name=\"firstName\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                    />\n\n                    <label>Last Name</label>\n                    <Field\n                        disabled={disableRobotsOnAdd}\n                      name=\"lastName\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                    />\n\n                    <label>Email</label>\n                    <Field\n                        disabled={disableRobotsOnAdd}\n                      name=\"email\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label>Notes</label>\n                  <Field\n                    name=\"notes\"\n                    component=\"textarea\"\n                    placeholder=\"Notes\"\n                  />\n                </div>\n                <div>\n                  <button\n                    className=\"ui primary basic button \"\n                    type=\"submit\"\n                    disabled={submitting || pristine|| disableRobotsOnAdd}\n                  >\n                    Submit\n                  </button>\n                  <button\n                    className=\"ui secondary basic button\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine||disableRobotsOnAdd}\n                  >\n                    Reset\n                  </button>\n                </div>\n                <pre>{JSON.stringify(values, 0, 2)}</pre>\n              </form>\n            )}\n          />\n        </Segment>\n      </Responsive>\n    );\n  }\n}\n\nCreateRobot.propTypes = {\n  firestore: PropTypes.object.isRequired,\n    setting:PropTypes.object.isRequired,\n};\n\nexport default compose(firestoreConnect(),connect((state,props)=>({\n    setting:state.setting,\n})))(CreateRobot);\n","import React,{useState} from 'react';\nimport { Button, Header, Image, Modal } from 'semantic-ui-react'\nimport { Link } from 'react-router-dom';\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport classNames from 'classnames'\nimport './index.module.css'\nimport {firestoreConnect} from \"react-redux-firebase\";\nconst Card = ({robotId , id , name ,email, notes, firestore,history,setting }) =>{\n\n    if(robotId == undefined){\n        robotId = id\n    }\n    const deleteRobot = ()=>{\n        firestore.delete({collection:'clients',doc:id}).then(history.push('/viewRobots'))\n            .catch(err=>console.log(err));\n\n    };\n\n    return(\n\n        <Modal\n            closeIcon\n            trigger={\n            <div className='bg-light-green dib br3 pa3 ma2 grow tc bw2 shadow-5'>\n                 <img alt='robots' src={`https://robohash.org/${robotId}?bgset=bg1&size=200x200`}/>\n                   <div>\n                       <h2>{name}</h2>\n                        <p>{email}</p>\n                       <p>{notes}</p>\n                   </div>\n            </div>}>\n<Modal.Header>Robot Details</Modal.Header>\n    <Modal.Content image>\n        <Image wrapped size='medium' src={`https://robohash.org/${robotId}?200*200`} />\n        <Modal.Description>\n            <Header>{name}</Header>\n            <p>We've found the following gravatar image associated with your e-mail address.</p>\n            <p>Is it okay to use this photo?</p>\n            <p>{notes}</p>\n            <Link className={classNames('ui button  primary',{\n                \n                disabled:setting.disableRobotsOnEdit,\n            })}  to={`/robot/edit/${id}`}> Edit Robot</Link>\n            <Button onClick={deleteRobot} negative disabled={setting.disableRobotsOnEdit}> Delete</Button>\n        </Modal.Description>\n    </Modal.Content>\n    </Modal>\n\n    )\n};\nexport default compose(firestoreConnect(),connect((state,props)=>({\n    setting:state.setting,\n})))(Card);","import React from \"react\";\nimport Card from \"../Card/card\";\nimport _ from \"lodash\";\n\nconst CardList = ({ robots, firestore, history }) => {\n  const cardComponent = _.map(robots, robot => (\n    <Card history={history} firestore={firestore} key={robot.id} {...robot} />\n  ));\n\n  return <div>{cardComponent}</div>;\n};\n\nexport default CardList;\n","import React from 'react';\nimport { Input } from 'semantic-ui-react';\n\nconst SearchBox = ({searchfield, searchChange})=>{\n\n    return(\n        <div className = 'pa2 '>\n\n            <input \n            className = 'pa3 ba b--green bg-lightest-blue'\n            type='search' \n            placeholder='Search for Robot friends'\n            onChange = {searchChange}\n            />\n        </div>    \n    )\n}\n\n\n\n\n\n\n\nexport default SearchBox;","import React from 'react';\n\nconst Scroll = (props) => {\n    return (\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\n            {props.children}\n        </div>\n    );\n};\n\nexport default Scroll;","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport CardList from \"../../components/CardList\";\nimport SearchBox from \"../../components/SearchBox\";\nimport {compose} from \"redux\";\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {connect} from \"react-redux\";\nimport _ from 'lodash';\nimport Scroll from '../../components/Scroll';\nimport {\n    Loader\n} from \"semantic-ui-react\";\nclass DisplayRobot extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n            searchfield: \"\"\n        };\n    }\n\n    onSearchChange = event => {\n        this.setState({ searchfield: event.target.value });\n    };\n    render() {\n\n        const { clients,firestore,history } = this.props;\n        const clientNames = _.map(clients, (client)=>({\n           name:client.firstName +client.lastName,\n            ...client\n        }));\n        const filteredRobots =_.filter(clientNames, (robot)=>( _.toLower(robot.name)\n            .includes(_.toLower(this.state.searchfield))));\n        if(clients){\n            return (\n                <div>\n                    <h1 className='f1'>Robot Friends</h1>\n                    <SearchBox searchChange={this.onSearchChange} />\n                    <Scroll>\n\n                        <CardList history={history} firestore={firestore} robots={filteredRobots} />\n                    </Scroll>\n                </div>\n            )\n        }else {\n            return( <Loader active  size='large'> <h3 >Making robots</h3></Loader>)\n        }\n\n    }\n}\n\nDisplayRobot.propTypes = {\n    clients:PropTypes.array,\n};\n\nexport default compose(\n    firestoreConnect([{ collection: \"clients\" }]),\n    connect((state, props) => ({\n        clients: state.firestore.ordered.clients,\n    }))\n)(DisplayRobot);\n","import React from 'react';\nimport classNames from 'classnames'\nimport PropTypes from 'prop-types';\n\nconst Alert = ({ message, messageType }) => {\n\n    return (\n        <div className={classNames('ui message',{\n            positive: messageType === 'success',\n            negative: messageType === 'error',\n        })}>\n            <div className=\"header\">\n                {message}\n            </div>\n\n        </div>\n    );\n};\n\nAlert.propTypes = {\n\n};\n\nexport default Alert;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Grid,\n  Header,\n  Image,\n  Form,\n  Message,\n  Segment,\n  Card,\n  Input\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setDisableRobotsOnAdd,\n  setDisableRobotsOnEdit,\n  setAllowRegistration\n} from \"../../actions/settingAction.js\";\nimport classNames from \"classnames\";\n\nimport Alert from \"../layout/Alert\";\n\nclass Setting extends Component {\n\n  render() {\n    const {\n      disableRobotsOnAdd,\n      disableRobotsOnEdit,\n      allowRegistration\n    } = this.props.setting;\n    const {\n      setDisableRobotsOnAdd,\n      setDisableRobotsOnEdit,\n      setAllowRegistration\n    } = this.props;\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n\n            <Header as='h2' color='teal' textAlign='center'>\n                <Link to={\"/viewRobots\"}>Back to View Robots</Link>\n            </Header>\n\n        <Card fluid>\n          <Card.Header>Edit Setting</Card.Header>\n          <Card.Content>\n            <Form>\n              <Form.Checkbox\n                label={\"Allow Registration\"}\n                checked={!!allowRegistration}\n                onChange={setAllowRegistration}\n              />\n              <Form.Checkbox\n                label={\"Disable add robots \"}\n                checked={!!disableRobotsOnAdd}\n                onChange={ setDisableRobotsOnAdd}\n              />\n              <Form.Checkbox\n                label={\"Disable edit robots\"}\n                checked={!!disableRobotsOnEdit}\n                onChange={setDisableRobotsOnEdit}\n              />\n            </Form>\n          </Card.Content>\n        </Card>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nSetting.propTypes = {\n  setting: PropTypes.object.isRequired,\n  setDisableRobotsOnAdd: PropTypes.func.isRequired,\n  allowRegistration: PropTypes.func.isRequired\n};\nconst mapStateToProps = (state, props) => ({\n  auth: state.firebase.auth,\n  setting: state.setting\n});\nexport default connect(\n  mapStateToProps,\n  {\n    setDisableRobotsOnAdd,\n    setDisableRobotsOnEdit,\n    setAllowRegistration\n  }\n)(Setting);\n","import {\n    DISABLE_ROBOTS_ON_ADD,\n    DISABLE_ROBOTS_ON_EDIT,\n    ALLOW_REGISTRATION\n} from \"../actions/types\";\n\nimport React from 'react';\n\n\n\nexport const setDisableRobotsOnAdd = () => {\n    //get the value from local storage\n    const setting = JSON.parse(localStorage.getItem('setting'));\n    //toggle\n    setting.disableRobotsOnAdd = !setting.disableRobotsOnAdd;\n    //return the value back to local storage\n    localStorage.setItem('setting',JSON.stringify( setting))\n    return {\n        type:DISABLE_ROBOTS_ON_ADD,\n        payload:setting.disableRobotsOnAdd,\n    }\n};\nexport const setDisableRobotsOnEdit = () => {\n    const setting = JSON.parse(localStorage.getItem('setting'));\n    //toggle\n    setting.disableRobotsOnEdit = !setting.disableRobotsOnEdit;\n    //return the value back to local storage\n    localStorage.setItem('setting',JSON.stringify( setting));\n\n    return {\n        type:DISABLE_ROBOTS_ON_EDIT,\n        payload:setting.disableRobotsOnEdit,\n    }\n};\n\nexport const setAllowRegistration = () => {\n    const setting = JSON.parse(localStorage.getItem('setting'));\n    //toggle\n    setting.allowRegistration = !setting.allowRegistration;\n    //return the value back to local storage\n    localStorage.setItem('setting',JSON.stringify( setting));\n\n\n    return {\n        type:ALLOW_REGISTRATION,\n        payload:setting.allowRegistration,\n    }\n};\n\n\n","import _ from \"lodash\";\nimport React, { Component,Fragment } from \"react\";\nimport { render } from \"react-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport robot from \"./robot.png\";\nimport {\n  Container,\n  Icon,\n  Image,\n  Menu,\n  Sidebar,\n  Sticky,\n  Responsive\n} from \"semantic-ui-react\";\nimport \"./NavBar.css\";\nimport Setting from \"../../setting/Setting\";\n\nexport const NavBarMobile = ({\n\n  children,\n  isLogin,\n  onPusherClick,\n  onToggle,\n  visible,\n  onLogoutClick\n}) => (\n  <Sidebar.Pushable>\n    <Sidebar\n      as={Menu}\n      animation=\"overlay\"\n      icon=\"labeled\"\n      inverted\n      direction=\"right\"\n      vertical\n      visible={visible}\n    >\n      <Menu.Item onClick={onToggle} as={NavLink} to=\"/home\">\n        Home\n      </Menu.Item>\n      <Menu.Item onClick={onToggle} to=\"/createRobot\" as={NavLink}>\n        Create Robot\n      </Menu.Item>\n      <Menu.Item onClick={onToggle} as={NavLink} to=\"/viewRobots\">\n        View Robots\n      </Menu.Item>\n      {isLogin ? (\n          <Fragment>\n              <Menu.Item\n                  onClick={() => {\n                      onToggle();\n                  }}\n                  to=\"/setting\"\n                  as={NavLink}\n              >\n                Setting\n              </Menu.Item>\n\n        <Menu.Item\n          onClick={() => {\n            onLogoutClick();\n            onToggle();\n          }}\n          to=\"/home\"\n          as={NavLink}\n        >\n          Log out\n        </Menu.Item>\n          </Fragment>\n      ) : (\n       <div>\n        <Menu.Item onClick={onToggle} to=\"/login\" as={NavLink}>\n          Login\n        </Menu.Item>\n         <Menu.Item onClick={onToggle} to=\"/signUp\" as={NavLink}>\n           Sign up\n         </Menu.Item>\n       </div>\n      )}\n\n    \n    </Sidebar>\n    <Sidebar.Pusher\n      dimmed={visible}\n      onClick={onPusherClick}\n      fixed=\"top\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Menu fixed=\"top\" inverted>\n        <Menu.Item>\n          <Image size=\"mini\" src={robot} />\n        </Menu.Item>\n        <Menu.Item>\n          <h4>Robot Friends</h4>\n        </Menu.Item>\n        <Menu.Item position=\"right\" onClick={onToggle}>\n          <Icon name=\"sidebar\" />\n        </Menu.Item>\n      </Menu>\n      {children}\n    </Sidebar.Pusher>\n  </Sidebar.Pushable>\n);\n","\nimport _ from \"lodash\";\nimport React, { Component } from \"react\";\nimport { render } from \"react-dom\";\nimport {Link } from 'react-router-dom';\nimport {\n    Container,\n    Icon,\n    Image,\n    Menu,\n    Sidebar,\n    Responsive\n} from \"semantic-ui-react\";\n\nexport const NavBarChildren = ({ children }) => (\n    <Container style={{ marginTop: \"5em\" }}>{children}</Container>\n);","import _ from \"lodash\";\nimport React, { Component,Fragment } from \"react\";\nimport { render } from \"react-dom\";\nimport robot from \"./robot.png\";\n\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Container,\n  Icon,\n  Image,\n  Menu,\n  Sidebar,\n  Responsive,\n  Button\n} from \"semantic-ui-react\";\n\nconst NavBarDesktop = ({ onLogoutClick, isLogin }) => (\n  <Menu fixed=\"top\" inverted>\n    <Menu.Item>\n      <Image size=\"mini\" src={robot} />\n    </Menu.Item>\n    <Menu.Header>\n      <h5 className=\"f1\">Robot Friends</h5>\n    </Menu.Header>\n    <Menu.Menu position=\"right\">\n      <NavLink\n        className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\n        to=\"/home\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\n        to=\"/createRobot\"\n      >\n        Create Robot\n      </NavLink>\n      <NavLink\n        className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\n        to=\"/viewRobots\"\n      >\n        View Robots\n      </NavLink>\n      {isLogin ? (\n          <Fragment>\n              <NavLink\n                  className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\n\n                  to=\"/setting\"\n              >\n                  Setting\n              </NavLink>\n        <NavLink\n          className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\n          onClick={onLogoutClick}\n          to=\"/home\"\n        >\n          Log out\n        </NavLink>\n          </Fragment>\n      ) : (\n       <div>\n        <NavLink\n          className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\n          to=\"/login\"\n        >\n          Login\n        </NavLink>\n         <NavLink\n          className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\n          to=\"/signUp\"\n         >\n           Sign up\n         </NavLink>\n       </div>\n      )}\n\n      \n    </Menu.Menu>\n  </Menu>\n);\nexport default NavBarDesktop;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport CreateRobot from \"../../../containers/CreateRobot\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { connect } from \"react-redux\";\nimport {\n  Container,\n  Icon,\n  Image,\n  Menu,\n  Sidebar,\n  Responsive\n} from \"semantic-ui-react\";\nimport { NavBarMobile } from \"./NavBarMoblie\";\nimport { NavBarChildren } from \"./NavBarChildren\";\nimport NavBarDesktop from \"./NavBarDesktop\";\n\nclass NavBar extends Component {\n  state = {\n    visible: false,\n    isAuthenticated: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { auth } = props;\n    if (auth.uid) {\n      return { isAuthenticated: true };\n    } else {\n      return { isAuthenticated: false };\n    }\n  }\n  handlePusher = () => {\n    const { visible } = this.state;\n\n    if (visible) this.setState({ visible: false });\n  };\n  onLogoutClick = () => {\n    const { firebase } = this.props;\n    firebase.logout();\n  };\n\n  handleToggle = () => this.setState({ visible: !this.state.visible });\n  render() {\n    const { children } = this.props;\n    const { visible, isAuthenticated } = this.state;\n    return (\n      <div>\n        <Responsive {...Responsive.onlyMobile}>\n          <NavBarMobile\n            onPusherClick={this.handlePusher}\n            onToggle={this.handleToggle}\n            isLogin={isAuthenticated}\n            onLogoutClick={this.onLogoutClick}\n            visible={visible}\n          >\n            <NavBarChildren>{children}</NavBarChildren>\n          </NavBarMobile>\n        </Responsive>\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n          <NavBarDesktop\n            isLogin={isAuthenticated}\n            onLogoutClick={this.onLogoutClick}\n          />\n          <NavBarChildren>{children}</NavBarChildren>\n        </Responsive>\n      </div>\n    );\n  }\n}\n\nNavBar.propTypes = {\n    firebase:PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired,\n    setting: PropTypes.object.isRequired,\n};\n\nexport default withRouter(\n  compose(\n    firebaseConnect(),\n    connect((state, props) => ({\n      auth: state.firebase.auth,\n      setting: state.setting\n    }))\n  )(NavBar)\n);\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\n\nclass Landing extends Component {\n    render() {\n        return (\n            <div>\n          \n            </div>\n        );\n    }\n}\n\nLanding.propTypes = {};\n\nexport default Landing;\n","import React, {Component} from 'react';\nimport PropTypes from 'prop-types';\nimport {compose} from \"redux\";\nimport {firestoreConnect} from \"react-redux-firebase\";\nimport {connect} from \"react-redux\";\n\nimport {Card, Placeholder, Responsive, Segment} from \"semantic-ui-react\";\nimport {Field, Form} from \"react-final-form\";\nimport {Slider} from \"react-semantic-ui-range\";\n\nclass editRobot extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {};\n    }\n    onSubmit = values => {\n        const updatedRobot = values;\n        const { firestore, client, history } =this.props;\n        firestore.update({collection:'clients',doc:client.id},updatedRobot)\n            .then(history.push('/viewRobots'))\n            .catch(err=>console.log(err))\n    };\n\n    render() {\n        const {client  } = this.props;\n        if(client){\n            return (\n                <Responsive>\n                    <Segment>\n\n                        <Form\n                            onSubmit={this.onSubmit}\n                            initialValues={{\n                                robotId:client.robotId,\n                                firstName:client.firstName,\n                                lastName:client.lastName,\n                                email:client.email,\n                                notes:client.notes\n                            }}\n                            render={({ handleSubmit, form, submitting, pristine, values }) => (\n                                <form className=\"ui form\" onSubmit={handleSubmit}>\n                                    <div className=\"fields\">\n                                        <div className=\"six wide field\">\n                                            <Card fluid>\n                                                <Card.Header>\n                                                    <label>Robot image</label>\n                                                </Card.Header>\n                                                <Card.Content>\n                                                    {\n                                                        values.robotId ==undefined ?<Placeholder fluid> <Placeholder.Image rectangular /> </Placeholder>:<img alt='robots' src={`https://robohash.org/${values.robotId}?bgset=bg1&size=300x300`}/>\n                                                    }\n\n                                                </Card.Content>\n                                            </Card>\n                                        </div>\n                                        <div className=\" ten wide field\">\n                                            <label>Angriness</label>\n\n                                            <Field name=\"robotId\" >\n                                                {({ input, meta }) =>(\n\n                                                    <Slider\n                                                        {...input}\n\n                                                        color=\"red\"\n                                                        settings={{\n                                                            start: 2,\n                                                            min: 0,\n                                                            max: 100,\n                                                            step: 1,\n                                                            onChange:value =>{ input.onChange(value)}\n                                                        }}\n                                                    />\n\n\n                                                ) }\n                                            </Field>\n\n                                            <label>First Name</label>\n                                            <Field\n                                                name=\"firstName\"\n                                                component=\"input\"\n                                                type=\"text\"\n                                                placeholder=\"First Name\"\n                                            />\n\n                                            <label>Last Name</label>\n                                            <Field\n                                                name=\"lastName\"\n                                                component=\"input\"\n                                                type=\"text\"\n                                                placeholder=\"Last Name\"\n                                            />\n\n                                            <label>Email</label>\n                                            <Field\n                                                name=\"email\"\n                                                component=\"input\"\n                                                type=\"text\"\n                                                placeholder=\"Last Name\"\n                                            />\n                                        </div>\n                                    </div>\n                                    <div className=\"field\">\n                                        <label>Notes</label>\n                                        <Field\n                                            name=\"notes\"\n                                            component=\"textarea\"\n                                            placeholder=\"Notes\"\n                                        />\n                                    </div>\n                                    <div >\n                                        <button className='ui primary basic button ' type=\"submit\" disabled={submitting || pristine}>\n                                            Submit\n                                        </button>\n                                        <button\n                                            className='ui secondary basic button'\n                                            onClick={form.reset}\n                                            disabled={submitting || pristine}\n                                        >\n                                            Reset\n                                        </button>\n                                    </div>\n                                    <pre>{JSON.stringify(values, 0, 2)}</pre>\n                                </form>\n                            )}\n                        />\n                    </Segment>\n                </Responsive>\n            )\n        }else {\n            return (\n                <h1>hi</h1>\n            )\n        }\n\n    }\n}\n\neditRobot.propTypes = {\n    clients:PropTypes.array,\n    firestore:PropTypes.object.isRequired,\n};\n\nexport default compose(\n    firestoreConnect( props =>[\n        {collection:'clients',storeAs:'client',doc:props.match.params.id}\n    ]),\n    connect(({firestore:{ordered}}, props) => ({\n        client: ordered.client && ordered.client[0]\n    }))\n)(editRobot);","import {NOTIFY_USER}from './types'\n\nexport const notifyUser = ( message ,messageType  )=>(\n    {\n        type:NOTIFY_USER,\n        messageType,\n        message,\n    }\n);\n\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport classNames from \"classnames\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport {\n  Button,\n  Card,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Placeholder,\n  Responsive,\n  Segment,\n  Icon,\n  Input\n} from \"semantic-ui-react\";\nimport { Slider } from \"react-semantic-ui-range\";\nimport { notifyUser } from \"../../../actions/notifyAction\";\nimport Alert from \"../../layout/Alert\";\nclass Login extends Component {\n  onSubmit = ({ email, password }) => {\n    const { firebase, history, notifyUser } = this.props;\n    firebase\n      .login({ email, password })\n      .then(history.push(\"/viewRobots\"))\n      .catch(err => notifyUser(\"Invalid Login Credentials\", \"error\"));\n  };\n  render() {\n    const { message, messageType } = this.props.notify;\n    return (\n      <Responsive>\n        <Grid\n          textAlign=\"center\"\n          style={{ height: \"100vh\" }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment raised stacked>\n              <Card fluid >\n                <Image\n\n                  alt=\"robots\"\n                  src={`https://robohash.org/1?bgset=bg1&set=set3&size=392x392`}\n                  wrapped\n                  ui={false}\n                />\n\n                <Card.Content extra>\n                  <Form\n                    onSubmit={this.onSubmit}\n                    initialValues={{}}\n                    render={({\n                      handleSubmit,\n                      form,\n                      submitting,\n                      pristine,\n                      values\n                    }) => (\n                      <form\n                        className={classNames(\"ui form\")}\n                        onSubmit={handleSubmit}\n                      >\n                        <div className=\"  field\">\n\n                          <label>Email</label>\n                          <Field\n                            name=\"email\"\n                            component=\"input\"\n                            type=\"email\"\n                            placeholder=\"Email\"\n                          >\n                            {({ input, meta }) => (\n                              <Input\n                                type=\"email\"\n                                {...input}\n                                icon=\"mail\"\n                                iconPosition=\"left\"\n                                placeholder=\"Email\"\n                              />\n                            )}\n                          </Field>\n                        </div>\n\n                        <div className=\"field\">\n                          <label>Passwords</label>\n                          <Field\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                          >\n                            {({ input, meta }) => (\n                              <Input\n                                type=\"password\"\n                                {...input}\n                                icon=\"lock\"\n                                iconPosition=\"left\"\n                                placeholder=\"Password\"\n                              />\n                            )}\n                          </Field>\n                        </div>\n                        {message && (\n                          <Alert message={message} messageType={messageType} />\n                        )}\n                        <button\n                          className=\"ui primary button fluid \"\n                          type=\"submit\"\n                          disabled={submitting || pristine}\n                        >\n                          Login\n                        </button>\n                        <pre>{JSON.stringify(values, 0, 2)}</pre>\n                      </form>\n                    )}\n                  />\n                </Card.Content>\n              </Card>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Responsive>\n    );\n  }\n}\n\nLogin.propTypes = {\n  firebase: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify\n    }),\n    { notifyUser }\n  )\n)(Login);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  Responsive,\n  Segment,\n  Card,\n  Placeholder,\n  Image\n} from \"semantic-ui-react\";\nimport { Form, Field } from \"react-final-form\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Slider } from \"react-semantic-ui-range\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\nimport { notifyUser } from \"../../../actions/notifyAction\";\nimport Alert from \"../../layout/Alert\";\n\nclass SignUp extends Component {\n  onSubmit = values => {\n    const { email, password } = values;\n    const { firebase, history, notifyUser } = this.props;\n    firebase\n      .createUser({ email, password })\n      .catch(err => notifyUser(\"That email already exits\", \"error\"));\n  };\n  render() {\n    const { message, messageType } = this.props.notify;\n    return (\n      <Responsive>\n        <Segment>\n          <Form\n            onSubmit={this.onSubmit}\n            initialValues={{}}\n            render={({ handleSubmit, form, submitting, pristine, values }) => (\n              <form className=\"ui form\" onSubmit={handleSubmit}>\n                <div className=\"fields\">\n                  <div className=\"six wide field\">\n                    <Card fluid>\n                      <Card.Header>\n                        <label>Let's start! </label>\n                      </Card.Header>\n                      <Image\n                        alt=\"robots\"\n                        src={`https://robohash.org/2?set=set5&bgset=bg1&size=300x300`}\n                        wrapped\n                        ui={false}\n                      />\n                    </Card>\n                  </div>\n\n                  <div className=\" ten wide field\">\n                    <label>First Name</label>\n                    <Field\n                      name=\"firstName\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                    />\n\n                    <label>Last Name</label>\n                    <Field\n                      name=\"lastName\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                    />\n\n                    <label>Email</label>\n                    <Field\n                      name=\"email\"\n                      component=\"input\"\n                      type=\"email\"\n                      placeholder=\"Email\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label>Password</label>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    component=\"input\"\n                    placeholder=\"Password\"\n                  />\n                </div>\n                {message && (\n                  <Alert message={message} messageType={messageType} />\n                )}\n                <div>\n                  <button\n                    className=\"ui primary basic button \"\n                    type=\"submit\"\n                    disabled={submitting || pristine}\n                  >\n                    Submit\n                  </button>\n                  <button\n                    className=\"ui secondary basic button\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </button>\n                </div>\n                <pre>{JSON.stringify(values, 0, 2)}</pre>\n              </form>\n            )}\n          />\n        </Segment>\n      </Responsive>\n    );\n  }\n}\n\nSignUp.propTypes = {\n  notify: PropTypes.object.isRequired\n};\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify\n    }),\n    { notifyUser }\n  )\n)(SignUp);\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nclass ErrorHandler extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      hasError: false\n    };\n  }\n  componentDidCatch(error, errorInfo) {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return (\n        <div>\n          <h1>Ooooops. That is not good </h1>\n          <img\n            src={`https://robohash.org/1?set=set5&bgset=bg1&size=300x300`}\n            alt=\"I am sorry\"\n          />\n          <p>Let me get back to you soon</p>\n        </div>\n      );\n    }\n    return this.props.children;\n  }\n}\n\nErrorHandler.propTypes = {};\n\nexport default ErrorHandler;\n","\n\nimport {Loader} from \"semantic-ui-react\";\n\nimport locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\n\n\nconst locationHelper = locationHelperBuilder({});\n\nexport const UserIsAuthenticated = connectedRouterRedirect({\n    wrapperDisplayName: 'UserIsAuthenticated',\n    AuthenticatingComponent: Loader,\n    allowRedirectBack: true,\n    redirectPath: (state, ownProps) =>\n        locationHelper.getRedirectQueryParam(ownProps) || '/login',\n    authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\n        !auth.isLoaded || isInitializing === true,\n    authenticatedSelector: ({ firebase: { auth } }) =>\n        auth.isLoaded && !auth.isEmpty\n});\n\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\n    wrapperDisplayName: 'UserIsNotAuthenticated',\n    AuthenticatingComponent: Loader,\n    allowRedirectBack: false,\n    redirectPath: (state, ownProps) =>\n        locationHelper.getRedirectQueryParam(ownProps) || '/',\n    authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\n        !auth.isLoaded || isInitializing === true,\n    authenticatedSelector: ({ firebase: { auth } }) =>\n        auth.isLoaded && auth.isEmpty\n});","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport store from \"../../store\";\nimport { Provider } from \"react-redux\";\nimport CreateRobot from \"../CreateRobot\";\nimport DisplayRobot from \"../DisplayRobot/index\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"../../components/layout/NavBar/index\";\nimport Landing from \"../Landing\";\nimport editRobot from \"../editRobot\";\nimport Login from \"../../components/auth/Login/Login\";\nimport Setting from \"../../components/setting/Setting\";\nimport SignUp from \"../../components/auth/SignUp/SignUp\";\nimport ErrorHandler from \"../../components/errorHandle\";\nimport {\n  UserIsAuthenticated,\n  UserIsNotAuthenticated\n} from \"../../helpers/auth\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  // use arrow function to create a scope so that \"this\" refers to App object.\n  //Otherwise it points to event,which does not have this.state\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"tc\">\n            <NavBar>\n              <ErrorHandler>\n                <Switch>\n                  <Route exact path=\"/home\" component={Landing} />\n                  <Route\n                    exact\n                    path=\"/createRobot\"\n                    component={UserIsAuthenticated(CreateRobot)}\n                  />\n                  <Route\n                    exact\n                    path=\"/viewRobots\"\n                    component={UserIsAuthenticated(DisplayRobot)}\n                  />\n                  <Route\n                    exact\n                    path=\"/robot/edit/:id\"\n                    component={UserIsAuthenticated(editRobot)}\n                  />\n                  <Route\n                    exact\n                    path=\"/login\"\n                    component={UserIsNotAuthenticated(Login)}\n                  />\n                  <Route\n                    exact\n                    path=\"/signUp\"\n                    component={UserIsNotAuthenticated(SignUp)}\n                  />\n                  <Route exact path=\"/setting\" component={Setting} />\n                </Switch>\n              </ErrorHandler>\n            </NavBar>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./containers/App/App\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport \"tachyons\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
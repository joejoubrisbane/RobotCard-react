{"version":3,"sources":["components/layout/NavBar/robot.png","components/Card/index.module.css","reducers/notifyReducer.js","store.js","actions/types.js","reducers/settingReducer.js","containers/CreateRobot/index.js","components/Card/card.js","components/CardList/index.js","components/SearchBox/index.js","components/Scroll/index.js","containers/DisplayRobot/index.js","components/layout/Alert/index.js","components/setting/Setting.js","actions/settingAction.js","components/layout/NavBar/NavBarMoblie.js","components/layout/NavBar/NavBarChildren.js","components/layout/NavBar/NavBarDesktop.js","components/layout/NavBar/index.js","containers/Landing/index.js","containers/editRobot/index.js","components/auth/Login/Login.js","actions/notifyAction.js","components/auth/SignUp/SignUp.js","helpers/auth.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","disabledLink","initialState","message","messageType","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","createStoreWithFirebase","compose","reactReduxFirebase","userProfile","reduxFirestore","createStore","rootReducer","combineReducers","firebaseReducer","firestoreReducer","notify","state","arguments","length","undefined","action","type","Object","objectSpread","setting","disableRobotsOnAdd","payload","disableRobotsOnEdit","allowRegistration","localStorage","getItem","setItem","JSON","stringify","store","parse","window","__REDUX_DEVTOOLS_EXTENSION__","CreateRobot","onSubmit","values","newRobot","_this$props","_this","props","history","add","collection","then","push","catch","err","console","log","this","react_default","a","createElement","Responsive","Segment","react_final_form_es","initialValues","render","_ref","handleSubmit","form","submitting","pristine","className","Card_Card","fluid","Header","Content","robotId","Placeholder","Image","rectangular","alt","src","concat","name","_ref2","input","meta","build","assign","disabled","color","settings","start","min","max","step","onChange","value","component","placeholder","onClick","reset","Component","firestoreConnect","connect","id","email","notes","Modal","closeIcon","trigger","image","wrapped","size","Description","Link","classNames","to","Button","delete","doc","negative","CardList","robots","cardComponent","_","map","robot","card","key","SearchBox","searchfield","searchChange","Scroll","style","overflow","border","height","children","DisplayRobot","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","_this2","clients","clientNames","client","firstName","lastName","filteredRobots","filter","toLower","includes","components_SearchBox","components_Scroll","components_CardList","Loader","active","ordered","Alert","positive","Setting","_this$props$setting","setDisableRobotsOnAdd","setDisableRobotsOnEdit","setAllowRegistration","Grid","textAlign","verticalAlign","Column","maxWidth","as","Form","Checkbox","label","checked","auth","NavBarMobile","isLogin","onPusherClick","onToggle","visible","onLogoutClick","Sidebar","Pushable","Menu","animation","icon","inverted","direction","vertical","Item","NavLink","react","Pusher","dimmed","fixed","minHeight","position","Icon","NavBarChildren","Container","marginTop","NavBarDesktop","NavBar","isAuthenticated","handlePusher","logout","handleToggle","_this$state","onlyMobile","NavBarMoblie_NavBarMobile","NavBarChildren_NavBarChildren","minWidth","onlyTablet","NavBar_NavBarDesktop","uid","withRouter","firebaseConnect","Landing","editRobot","updatedRobot","update","storeAs","match","params","_ref3","Login","password","notifyUser","login","_this$props$notify","raised","stacked","ui","extra","Input","iconPosition","_ref4","layout_Alert","SignUp","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","ownProps","getRedirectQueryParam","authenticatingSelector","_ref$firebase","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","_ref3$firebase","App","es","BrowserRouter","layout_NavBar","Switch","Route","exact","path","Boolean","location","hostname","ReactDOM","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.0aba7707.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot.388b052a.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"disabledLink\":\"Card_disabledLink__1CX_t\"};","import {NOTIFY_USER } from '../actions/types'\r\n\r\nconst initialState ={\r\n    message:null,\r\n    messageType:null,\r\n};\r\n\r\n\r\nexport default function (state = initialState,action) {\r\n    switch (action.type) {\r\n        case NOTIFY_USER:\r\n            return{\r\n                ...state,\r\n                message:action.message,\r\n                messageType: action.messageType,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from \"react\";\nimport { render } from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport settingReducer from \"./reducers/settingReducer\";\nimport notifyReducer from \"./reducers/notifyReducer.js\";\nimport { createStore, combineReducers, compose } from \"redux\";\nimport { reactReduxFirebase, firebaseReducer } from \"react-redux-firebase\";\nimport firebase from \"firebase/app\";\nimport \"firebase/auth\";\nimport \"firebase/database\";\nimport \"firebase/firestore\"; // <- needed if using firestore\n// import 'firebase/functions' // <- needed if using httpsCallable\nimport { reduxFirestore, firestoreReducer } from \"redux-firestore\"; // <- needed if using firestore\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyC6rHHcP2S1RHoKZG8dZrcFIRX_T7Q4klY\",\n  authDomain: \"robot-friend-b4cd3.firebaseapp.com\",\n  databaseURL: \"https://robot-friend-b4cd3.firebaseio.com\",\n  projectId: \"robot-friend-b4cd3\",\n  storageBucket: \"robot-friend-b4cd3.appspot.com\",\n  messagingSenderId: \"202082833271\",\n  appId: \"1:202082833271:web:c1402d43dbc35061\"\n};\n\n// react-redux-firebase config\nconst rrfConfig = {\n  userProfile: \"users\"\n  // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\n};\n\n// Initialize firebase instance\nfirebase.initializeApp(firebaseConfig);\n\n// Initialize other services on firebase instance\nfirebase.firestore(); // <- needed if using firestore\n// firebase.functions() // <- needed if using httpsCallable\n\n// Add reactReduxFirebase enhancer when making store creator\nconst createStoreWithFirebase = compose(\n  reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\n  reduxFirestore(firebase) // <- needed if using firestore\n)(createStore);\n\n// Add firebase to reducers\nconst rootReducer = combineReducers({\n  firebase: firebaseReducer,\n  firestore: firestoreReducer, // <- needed if using firestore\n  notify: notifyReducer,\n  setting: settingReducer\n});\n//Check for setting in localStorage\nif(localStorage.getItem('setting')==null){\n    const defaultSetting={\n        disableRobotsOnAdd:true,\n        disableRobotsOnEdit:false,\n        allowRegistration:false,\n    };\n    localStorage.setItem('setting',JSON.stringify(defaultSetting))\n}\n// Create store with reducers and initial state\nconst initialState = {setting:JSON.parse(localStorage.getItem('setting'))};\nconst store = createStoreWithFirebase(\n  rootReducer,\n  initialState,\n  compose(\n    reactReduxFirebase(firebase),\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n  )\n);\n\nexport default store;\n","export const NOTIFY_USER ='NOTIFY_USER';\r\nexport const DISABLE_ROBOTS_ON_ADD ='DISABLE_ROBOTS_ON_ADD';\r\nexport const DISABLE_ROBOTS_ON_EDIT ='DISABLE_ROBOTS_ON_EDIT';\r\nexport const ALLOW_REGISTRATION ='ALLOW_REGISTRATION';\r\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  DISABLE_ROBOTS_ON_ADD,\n  DISABLE_ROBOTS_ON_EDIT,\n  ALLOW_REGISTRATION\n} from \"../actions/types\";\n\n\nexport default (state={},action) =>{\n    switch (action.type) {\n        case DISABLE_ROBOTS_ON_ADD:\n            return{\n                ...state,\n                disableRobotsOnAdd: action.payload,\n            };\n        case DISABLE_ROBOTS_ON_EDIT:\n            return{\n                ...state,\n                disableRobotsOnEdit: action.payload,\n            };\n        case ALLOW_REGISTRATION:\n            return{\n                ...state,\n                allowRegistration: action.payload,\n            };\n        default:\n            return state;\n\n    }\n\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Responsive, Segment, Card, Placeholder } from \"semantic-ui-react\";\nimport { Form, Field } from \"react-final-form\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Slider } from \"react-semantic-ui-range\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nclass CreateRobot extends Component {\n  onSubmit = values => {\n    const newRobot = values;\n    const { firestore, history } = this.props;\n    firestore\n      .add({ collection: \"clients\" }, newRobot)\n      .then(history.push(\"/viewRobots\"))\n      .catch(err => console.log(err));\n  };\n  render() {\n      const {disableRobotsOnAdd} = this.props.setting;\n    return (\n      <Responsive>\n        <Segment>\n          <Form\n            onSubmit={this.onSubmit}\n            initialValues={{}}\n            render={({ handleSubmit, form, submitting, pristine, values }) => (\n              <form className=\"ui form\" onSubmit={handleSubmit}>\n                <div className=\"fields\">\n                  <div className=\"six wide field\">\n                    <Card fluid>\n                      <Card.Header>\n                        <label>Robot image</label>\n                      </Card.Header>\n                      <Card.Content>\n                        {values.robotId == undefined ? (\n                          <Placeholder fluid>\n                            {\" \"}\n                            <Placeholder.Image rectangular />{\" \"}\n                          </Placeholder>\n                        ) : (\n                          <img\n                            alt=\"robots\"\n                            src={`https://robohash.org/${\n                              values.robotId\n                            }?200*200`}\n                          />\n                        )}\n                      </Card.Content>\n                    </Card>\n                  </div>\n                  <div className=\" ten wide field\">\n                    <label>Angriness</label>\n\n                    <Field name=\"robotId\">\n                      {({ input, meta }) => (\n                        <Slider\n                            disabled={disableRobotsOnAdd}\n                          {...input}\n                          color=\"red\"\n                          settings={{\n                            start: 2,\n                            min: 0,\n                            max: 100,\n                            step: 1,\n                            onChange: value => {\n                              input.onChange(value);\n                            }\n                          }}\n                        />\n                      )}\n                    </Field>\n\n                    <label>First Name</label>\n                    <Field\n                        disabled={disableRobotsOnAdd}\n                      name=\"firstName\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                    />\n\n                    <label>Last Name</label>\n                    <Field\n                        disabled={disableRobotsOnAdd}\n                      name=\"lastName\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                    />\n\n                    <label>Email</label>\n                    <Field\n                        disabled={disableRobotsOnAdd}\n                      name=\"email\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label>Notes</label>\n                  <Field\n                    name=\"notes\"\n                    component=\"textarea\"\n                    placeholder=\"Notes\"\n                  />\n                </div>\n                <div>\n                  <button\n                    className=\"ui primary basic button \"\n                    type=\"submit\"\n                    disabled={submitting || pristine|| disableRobotsOnAdd}\n                  >\n                    Submit\n                  </button>\n                  <button\n                    className=\"ui secondary basic button\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine||disableRobotsOnAdd}\n                  >\n                    Reset\n                  </button>\n                </div>\n                <pre>{JSON.stringify(values, 0, 2)}</pre>\n              </form>\n            )}\n          />\n        </Segment>\n      </Responsive>\n    );\n  }\n}\n\nCreateRobot.propTypes = {\n  firestore: PropTypes.object.isRequired,\n    setting:PropTypes.object.isRequired,\n};\n\nexport default compose(firestoreConnect(),connect((state,props)=>({\n    setting:state.setting,\n})))(CreateRobot);\n","import React,{useState} from 'react';\r\nimport { Button, Header, Image, Modal } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\nimport { connect } from \"react-redux\";\r\nimport { compose } from \"redux\";\r\nimport classNames from 'classnames'\r\nimport './index.module.css'\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nconst Card = ({robotId , id , name ,email, notes, firestore,history,setting }) =>{\r\n\r\n    if(robotId == undefined){\r\n        robotId = id\r\n    }\r\n    const deleteRobot = ()=>{\r\n        firestore.delete({collection:'clients',doc:id}).then(history.push('/viewRobots'))\r\n            .catch(err=>console.log(err));\r\n\r\n    };\r\n\r\n    return(\r\n\r\n        <Modal\r\n            closeIcon\r\n            trigger={\r\n            <div className='bg-light-green dib br3 pa3 ma2 grow tc bw2 shadow-5'>\r\n                 <img alt='robots' src={`https://robohash.org/${robotId}?bgset=bg1&size=100x100`}/>\r\n                   <div>\r\n                       <h2>{name}</h2>\r\n                        <p>{email}</p>\r\n                       <p>{notes}</p>\r\n                   </div>\r\n            </div>}>\r\n<Modal.Header>Robot Details</Modal.Header>\r\n    <Modal.Content image>\r\n        <Image wrapped size='medium' src={`https://robohash.org/${robotId}?200*200`} />\r\n        <Modal.Description>\r\n            <Header>{name}</Header>\r\n            <p>We've found the following gravatar image associated with your e-mail address.</p>\r\n            <p>Is it okay to use this photo?</p>\r\n            <p>{notes}</p>\r\n            <Link className={classNames('ui button  primary',{\r\n                \r\n                disabled:setting.disableRobotsOnEdit,\r\n            })}  to={`/robot/edit/${id}`}> Edit Robot</Link>\r\n            <Button onClick={deleteRobot} negative disabled={setting.disableRobotsOnEdit}> Delete</Button>\r\n        </Modal.Description>\r\n    </Modal.Content>\r\n    </Modal>\r\n\r\n    )\r\n};\r\nexport default compose(firestoreConnect(),connect((state,props)=>({\r\n    setting:state.setting,\r\n})))(Card);","import React from 'react';\r\nimport Card from '../Card/card';\r\nimport _ from 'lodash'\r\n\r\nconst CardList = ({robots,firestore,history}) =>{\r\n    const cardComponent = _.map(robots , (robot) =>(\r\n        <Card\r\n            history={history}\r\n            firestore={firestore}\r\n            key={robot.id}\r\n            {...robot}\r\n        />\r\n    ) );\r\n\r\n    return (\r\n        <div>\r\n           {cardComponent}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\n\r\nconst SearchBox = ({searchfield, searchChange})=>{\r\n\r\n    return(\r\n        <div className = 'pa2 '>\r\n\r\n            <input \r\n            className = 'pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='Search for Robot friends'\r\n            onChange = {searchChange}\r\n            />\r\n        </div>    \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CardList from \"../../components/CardList\";\r\nimport SearchBox from \"../../components/SearchBox\";\r\nimport {compose} from \"redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport {connect} from \"react-redux\";\r\nimport _ from 'lodash';\r\nimport Scroll from '../../components/Scroll';\r\nimport {\r\n    Loader\r\n} from \"semantic-ui-react\";\r\nclass DisplayRobot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            searchfield: \"\"\r\n        };\r\n    }\r\n\r\n    onSearchChange = event => {\r\n        this.setState({ searchfield: event.target.value });\r\n    };\r\n    render() {\r\n\r\n        const { clients,firestore,history } = this.props;\r\n        const clientNames = _.map(clients, (client)=>({\r\n           name:client.firstName +client.lastName,\r\n            ...client\r\n        }));\r\n        const filteredRobots =_.filter(clientNames, (robot)=>( _.toLower(robot.name)\r\n            .includes(_.toLower(this.state.searchfield))));\r\n        if(clients){\r\n            return (\r\n                <div>\r\n                    <h1 className='f1'>Robot Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n\r\n                        <CardList history={history} firestore={firestore} robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }else {\r\n            return( <Loader active  size='large'> <h3 >Making robots</h3></Loader>)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nDisplayRobot.propTypes = {\r\n    clients:PropTypes.array,\r\n};\r\n\r\nexport default compose(\r\n    firestoreConnect([{ collection: \"clients\" }]),\r\n    connect((state, props) => ({\r\n        clients: state.firestore.ordered.clients,\r\n    }))\r\n)(DisplayRobot);\r\n","import React from 'react';\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alert = ({ message, messageType }) => {\r\n\r\n    return (\r\n        <div className={classNames('ui message',{\r\n            positive: messageType === 'success',\r\n            negative: messageType === 'error',\r\n        })}>\r\n            <div className=\"header\">\r\n                {message}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nAlert.propTypes = {\r\n\r\n};\r\n\r\nexport default Alert;\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport {\n  Button,\n  Grid,\n  Header,\n  Image,\n  Form,\n  Message,\n  Segment,\n  Card,\n  Input\n} from \"semantic-ui-react\";\nimport { connect } from \"react-redux\";\n\nimport {\n  setDisableRobotsOnAdd,\n  setDisableRobotsOnEdit,\n  setAllowRegistration\n} from \"../../actions/settingAction.js\";\nimport classNames from \"classnames\";\n\nimport Alert from \"../layout/Alert\";\n\nclass Setting extends Component {\n  // onSetAllowRegistration=()=>{\n  //     const {setAllowRegistration} =this.props;\n  //     setAllowRegistration();\n  // }\n  render() {\n    const {\n      disableRobotsOnAdd,\n      disableRobotsOnEdit,\n      allowRegistration\n    } = this.props.setting;\n    const {\n      setDisableRobotsOnAdd,\n      setDisableRobotsOnEdit,\n      setAllowRegistration\n    } = this.props;\n    return (\n      <Grid textAlign='center' style={{ height: '100vh' }} verticalAlign='middle'>\n        <Grid.Column style={{ maxWidth: 450 }}>\n\n            <Header as='h2' color='teal' textAlign='center'>\n                <Link to={\"/viewRobots\"}>Back to View Robots</Link>\n            </Header>\n\n        <Card fluid>\n          <Card.Header>Edit Setting</Card.Header>\n          <Card.Content>\n            <Form>\n              <Form.Checkbox\n                label={\"Allow Registration\"}\n                checked={!!allowRegistration}\n                onChange={setAllowRegistration}\n              />\n              <Form.Checkbox\n                label={\"Disable add robots \"}\n                checked={!!disableRobotsOnAdd}\n                onChange={ setDisableRobotsOnAdd}\n              />\n              <Form.Checkbox\n                label={\"Disable edit robots\"}\n                checked={!!disableRobotsOnEdit}\n                onChange={setDisableRobotsOnEdit}\n              />\n            </Form>\n          </Card.Content>\n        </Card>\n        </Grid.Column>\n      </Grid>\n    );\n  }\n}\n\nSetting.propTypes = {\n  setting: PropTypes.object.isRequired,\n  setDisableRobotsOnAdd: PropTypes.func.isRequired,\n  allowRegistration: PropTypes.func.isRequired\n};\nconst mapStateToProps = (state, props) => ({\n  auth: state.firebase.auth,\n  setting: state.setting\n});\nexport default connect(\n  mapStateToProps,\n  {\n    setDisableRobotsOnAdd,\n    setDisableRobotsOnEdit,\n    setAllowRegistration\n  }\n)(Setting);\n","import {\r\n    DISABLE_ROBOTS_ON_ADD,\r\n    DISABLE_ROBOTS_ON_EDIT,\r\n    ALLOW_REGISTRATION\r\n} from \"../actions/types\";\r\n\r\nimport React from 'react';\r\n\r\n\r\n\r\nexport const setDisableRobotsOnAdd = () => {\r\n    //get the value from local storage\r\n    const setting = JSON.parse(localStorage.getItem('setting'));\r\n    //toggle\r\n    setting.disableRobotsOnAdd = !setting.disableRobotsOnAdd;\r\n    //return the value back to local storage\r\n    localStorage.setItem('setting',JSON.stringify( setting))\r\n    return {\r\n        type:DISABLE_ROBOTS_ON_ADD,\r\n        payload:setting.disableRobotsOnAdd,\r\n    }\r\n};\r\nexport const setDisableRobotsOnEdit = () => {\r\n    const setting = JSON.parse(localStorage.getItem('setting'));\r\n    //toggle\r\n    setting.disableRobotsOnEdit = !setting.disableRobotsOnEdit;\r\n    //return the value back to local storage\r\n    localStorage.setItem('setting',JSON.stringify( setting));\r\n\r\n    return {\r\n        type:DISABLE_ROBOTS_ON_EDIT,\r\n        payload:setting.disableRobotsOnEdit,\r\n    }\r\n};\r\n\r\nexport const setAllowRegistration = () => {\r\n    const setting = JSON.parse(localStorage.getItem('setting'));\r\n    //toggle\r\n    setting.allowRegistration = !setting.allowRegistration;\r\n    //return the value back to local storage\r\n    localStorage.setItem('setting',JSON.stringify( setting));\r\n\r\n\r\n    return {\r\n        type:ALLOW_REGISTRATION,\r\n        payload:setting.allowRegistration,\r\n    }\r\n};\r\n\r\n\r\n","import _ from \"lodash\";\nimport React, { Component,Fragment } from \"react\";\nimport { render } from \"react-dom\";\nimport { NavLink } from \"react-router-dom\";\nimport robot from \"./robot.png\";\nimport {\n  Container,\n  Icon,\n  Image,\n  Menu,\n  Sidebar,\n  Sticky,\n  Responsive\n} from \"semantic-ui-react\";\nimport \"./NavBar.css\";\nimport Setting from \"../../setting/Setting\";\n\nexport const NavBarMobile = ({\n\n  children,\n  isLogin,\n  onPusherClick,\n  onToggle,\n  visible,\n  onLogoutClick\n}) => (\n  <Sidebar.Pushable>\n    <Sidebar\n      as={Menu}\n      animation=\"overlay\"\n      icon=\"labeled\"\n      inverted\n      direction=\"right\"\n      vertical\n      visible={visible}\n    >\n      <Menu.Item onClick={onToggle} as={NavLink} to=\"/home\">\n        Home\n      </Menu.Item>\n      <Menu.Item onClick={onToggle} to=\"/createRobot\" as={NavLink}>\n        Create Robot\n      </Menu.Item>\n      <Menu.Item onClick={onToggle} as={NavLink} to=\"/viewRobots\">\n        View Robots\n      </Menu.Item>\n      {isLogin ? (\n          <Fragment>\n              <Menu.Item\n                  onClick={() => {\n                      onToggle();\n                  }}\n                  to=\"/setting\"\n                  as={NavLink}\n              >\n                Setting\n              </Menu.Item>\n\n        <Menu.Item\n          onClick={() => {\n            onLogoutClick();\n            onToggle();\n          }}\n          to=\"/home\"\n          as={NavLink}\n        >\n          Log out\n        </Menu.Item>\n          </Fragment>\n      ) : (\n        <Menu.Item onClick={onToggle} to=\"/login\" as={NavLink}>\n          Login\n        </Menu.Item>\n      )}\n\n      <Menu.Item onClick={onToggle} to=\"/signUp\" as={NavLink}>\n        Sign up\n      </Menu.Item>\n    </Sidebar>\n    <Sidebar.Pusher\n      dimmed={visible}\n      onClick={onPusherClick}\n      fixed=\"top\"\n      style={{ minHeight: \"100vh\" }}\n    >\n      <Menu fixed=\"top\" inverted>\n        <Menu.Item>\n          <Image size=\"mini\" src={robot} />\n        </Menu.Item>\n        <Menu.Item>\n          <h4>Robot Friends</h4>\n        </Menu.Item>\n        <Menu.Item position=\"right\" onClick={onToggle}>\n          <Icon name=\"sidebar\" />\n        </Menu.Item>\n      </Menu>\n      {children}\n    </Sidebar.Pusher>\n  </Sidebar.Pushable>\n);\n","\r\nimport _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport {Link } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Sidebar,\r\n    Responsive\r\n} from \"semantic-ui-react\";\r\n\r\nexport const NavBarChildren = ({ children }) => (\r\n    <Container style={{ marginTop: \"5em\" }}>{children}</Container>\r\n);","import _ from \"lodash\";\nimport React, { Component,Fragment } from \"react\";\nimport { render } from \"react-dom\";\nimport robot from \"./robot.png\";\n\nimport { NavLink } from \"react-router-dom\";\nimport {\n  Container,\n  Icon,\n  Image,\n  Menu,\n  Sidebar,\n  Responsive,\n  Button\n} from \"semantic-ui-react\";\n\nconst NavBarDesktop = ({ onLogoutClick, isLogin }) => (\n  <Menu fixed=\"top\" inverted>\n    <Menu.Item>\n      <Image size=\"mini\" src={robot} />\n    </Menu.Item>\n    <Menu.Header>\n      <h5 className=\"f1\">Robot Friends</h5>\n    </Menu.Header>\n    <Menu.Menu position=\"right\">\n      <NavLink\n        className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\n        to=\"/home\"\n      >\n        Home\n      </NavLink>\n      <NavLink\n        className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\n        to=\"/createRobot\"\n      >\n        Create Robot\n      </NavLink>\n      <NavLink\n        className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\n        to=\"/viewRobots\"\n      >\n        View Robots\n      </NavLink>\n      {isLogin ? (\n          <Fragment>\n              <NavLink\n                  className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\n\n                  to=\"/setting\"\n              >\n                  Setting\n              </NavLink>\n        <NavLink\n          className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\n          onClick={onLogoutClick}\n          to=\"/home\"\n        >\n          Log out\n        </NavLink>\n          </Fragment>\n      ) : (\n        <NavLink\n          className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\n          to=\"/login\"\n        >\n          Login\n        </NavLink>\n      )}\n\n      <NavLink\n        className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\n        to=\"/signUp \"\n      >\n        Sign up\n      </NavLink>\n    </Menu.Menu>\n  </Menu>\n);\nexport default NavBarDesktop;\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport CreateRobot from \"../../../containers/CreateRobot\";\nimport { compose } from \"redux\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { withRouter } from \"react-router-dom\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport { connect } from \"react-redux\";\nimport {\n  Container,\n  Icon,\n  Image,\n  Menu,\n  Sidebar,\n  Responsive\n} from \"semantic-ui-react\";\nimport { NavBarMobile } from \"./NavBarMoblie\";\nimport { NavBarChildren } from \"./NavBarChildren\";\nimport NavBarDesktop from \"./NavBarDesktop\";\n\nclass NavBar extends Component {\n  state = {\n    visible: false,\n    isAuthenticated: false\n  };\n\n  static getDerivedStateFromProps(props, state) {\n    const { auth } = props;\n    if (auth.uid) {\n      return { isAuthenticated: true };\n    } else {\n      return { isAuthenticated: false };\n    }\n  }\n  handlePusher = () => {\n    const { visible } = this.state;\n\n    if (visible) this.setState({ visible: false });\n  };\n  onLogoutClick = () => {\n    const { firebase } = this.props;\n    firebase.logout();\n  };\n\n  handleToggle = () => this.setState({ visible: !this.state.visible });\n  render() {\n    const { children } = this.props;\n    const { visible, isAuthenticated } = this.state;\n    return (\n      <div>\n        <Responsive {...Responsive.onlyMobile}>\n          <NavBarMobile\n            onPusherClick={this.handlePusher}\n            onToggle={this.handleToggle}\n            isLogin={isAuthenticated}\n            onLogoutClick={this.onLogoutClick}\n            visible={visible}\n          >\n            <NavBarChildren>{children}</NavBarChildren>\n          </NavBarMobile>\n        </Responsive>\n        <Responsive minWidth={Responsive.onlyTablet.minWidth}>\n          <NavBarDesktop\n            isLogin={isAuthenticated}\n            onLogoutClick={this.onLogoutClick}\n          />\n          <NavBarChildren>{children}</NavBarChildren>\n        </Responsive>\n      </div>\n    );\n  }\n}\n\nNavBar.propTypes = {\n    firebase:PropTypes.object.isRequired,\n    auth:PropTypes.object.isRequired,\n    setting: PropTypes.object.isRequired,\n};\n\nexport default withRouter(\n  compose(\n    firebaseConnect(),\n    connect((state, props) => ({\n      auth: state.firebase.auth,\n      setting: state.setting\n    }))\n  )(NavBar)\n);\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Landing page</h1>\r\n                <p className='alert'> ?????</p>\r\n                <i className=\"tw flag\"></i>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {};\r\n\r\nexport default Landing;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {compose} from \"redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {Card, Placeholder, Responsive, Segment} from \"semantic-ui-react\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {Slider} from \"react-semantic-ui-range\";\r\n\r\nclass editRobot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    onSubmit = values => {\r\n        const updatedRobot = values;\r\n        const { firestore, client, history } =this.props;\r\n        firestore.update({collection:'clients',doc:client.id},updatedRobot)\r\n            .then(history.push('/viewRobots'))\r\n            .catch(err=>console.log(err))\r\n    };\r\n\r\n    render() {\r\n        const {client  } = this.props;\r\n        if(client){\r\n            return (\r\n                <Responsive>\r\n                    <Segment>\r\n\r\n                        <Form\r\n                            onSubmit={this.onSubmit}\r\n                            initialValues={{\r\n                                robotId:client.robotId,\r\n                                firstName:client.firstName,\r\n                                lastName:client.lastName,\r\n                                email:client.email,\r\n                                notes:client.notes\r\n                            }}\r\n                            render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                                <form className=\"ui form\" onSubmit={handleSubmit}>\r\n                                    <div className=\"fields\">\r\n                                        <div className=\"six wide field\">\r\n                                            <Card fluid>\r\n                                                <Card.Header>\r\n                                                    <label>Robot image</label>\r\n                                                </Card.Header>\r\n                                                <Card.Content>\r\n                                                    {\r\n                                                        values.robotId ==undefined ?<Placeholder fluid> <Placeholder.Image rectangular /> </Placeholder>:<img alt='robots' src={`https://robohash.org/${values.robotId}?200*200`}/>\r\n                                                    }\r\n\r\n                                                </Card.Content>\r\n                                            </Card>\r\n                                        </div>\r\n                                        <div className=\" ten wide field\">\r\n                                            <label>Angriness</label>\r\n\r\n                                            <Field name=\"robotId\" >\r\n                                                {({ input, meta }) =>(\r\n\r\n                                                    <Slider\r\n                                                        {...input}\r\n\r\n                                                        color=\"red\"\r\n                                                        settings={{\r\n                                                            start: 2,\r\n                                                            min: 0,\r\n                                                            max: 100,\r\n                                                            step: 1,\r\n                                                            onChange:value =>{ input.onChange(value)}\r\n                                                        }}\r\n                                                    />\r\n\r\n\r\n                                                ) }\r\n                                            </Field>\r\n\r\n                                            <label>First Name</label>\r\n                                            <Field\r\n                                                name=\"firstName\"\r\n                                                component=\"input\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"First Name\"\r\n                                            />\r\n\r\n                                            <label>Last Name</label>\r\n                                            <Field\r\n                                                name=\"lastName\"\r\n                                                component=\"input\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last Name\"\r\n                                            />\r\n\r\n                                            <label>Email</label>\r\n                                            <Field\r\n                                                name=\"email\"\r\n                                                component=\"input\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last Name\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"field\">\r\n                                        <label>Notes</label>\r\n                                        <Field\r\n                                            name=\"notes\"\r\n                                            component=\"textarea\"\r\n                                            placeholder=\"Notes\"\r\n                                        />\r\n                                    </div>\r\n                                    <div >\r\n                                        <button className='ui primary basic button ' type=\"submit\" disabled={submitting || pristine}>\r\n                                            Submit\r\n                                        </button>\r\n                                        <button\r\n                                            className='ui secondary basic button'\r\n                                            onClick={form.reset}\r\n                                            disabled={submitting || pristine}\r\n                                        >\r\n                                            Reset\r\n                                        </button>\r\n                                    </div>\r\n                                    <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n                                </form>\r\n                            )}\r\n                        />\r\n                    </Segment>\r\n                </Responsive>\r\n            )\r\n        }else {\r\n            return (\r\n                <h1>hi</h1>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\neditRobot.propTypes = {\r\n    clients:PropTypes.array,\r\n    firestore:PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    firestoreConnect( props =>[\r\n        {collection:'clients',storeAs:'client',doc:props.match.params.id}\r\n    ]),\r\n    connect(({firestore:{ordered}}, props) => ({\r\n        client: ordered.client && ordered.client[0]\r\n    }))\r\n)(editRobot);","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { compose } from \"redux\";\nimport classNames from \"classnames\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { connect } from \"react-redux\";\nimport { Form, Field } from \"react-final-form\";\nimport { firebaseConnect } from \"react-redux-firebase\";\nimport {\n  Button,\n  Card,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Placeholder,\n  Responsive,\n  Segment,\n  Icon,\n  Input\n} from \"semantic-ui-react\";\nimport { Slider } from \"react-semantic-ui-range\";\nimport { notifyUser } from \"../../../actions/notifyAction\";\nimport Alert from \"../../layout/Alert\";\nclass Login extends Component {\n  onSubmit = ({ email, password }) => {\n    const { firebase, history, notifyUser } = this.props;\n    firebase\n      .login({ email, password })\n      .then(history.push(\"/viewRobots\"))\n      .catch(err => notifyUser(\"Invalid Login Credentials\", \"error\"));\n  };\n  render() {\n    const { message, messageType } = this.props.notify;\n    return (\n      <Responsive>\n        <Grid\n          textAlign=\"center\"\n          style={{ height: \"100vh\" }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Segment raised stacked>\n              <Card fluid >\n                <Image\n\n                  alt=\"robots\"\n                  src={`https://robohash.org/1?bgset=bg1&set=set3&size=392x392`}\n                  wrapped\n                  ui={false}\n                />\n\n                <Card.Content extra>\n                  <Form\n                    onSubmit={this.onSubmit}\n                    initialValues={{}}\n                    render={({\n                      handleSubmit,\n                      form,\n                      submitting,\n                      pristine,\n                      values\n                    }) => (\n                      <form\n                        className={classNames(\"ui form\")}\n                        onSubmit={handleSubmit}\n                      >\n                        <div className=\"  field\">\n\n                          <label>Email</label>\n                          <Field\n                            name=\"email\"\n                            component=\"input\"\n                            type=\"email\"\n                            placeholder=\"Email\"\n                          >\n                            {({ input, meta }) => (\n                              <Input\n                                type=\"email\"\n                                {...input}\n                                icon=\"mail\"\n                                iconPosition=\"left\"\n                                placeholder=\"Email\"\n                              />\n                            )}\n                          </Field>\n                        </div>\n\n                        <div className=\"field\">\n                          <label>Passwords</label>\n                          <Field\n                            type=\"password\"\n                            name=\"password\"\n                            placeholder=\"Password\"\n                          >\n                            {({ input, meta }) => (\n                              <Input\n                                type=\"password\"\n                                {...input}\n                                icon=\"lock\"\n                                iconPosition=\"left\"\n                                placeholder=\"Password\"\n                              />\n                            )}\n                          </Field>\n                        </div>\n                        {message && (\n                          <Alert message={message} messageType={messageType} />\n                        )}\n                        <button\n                          className=\"ui primary button fluid \"\n                          type=\"submit\"\n                          disabled={submitting || pristine}\n                        >\n                          Login\n                        </button>\n                        <pre>{JSON.stringify(values, 0, 2)}</pre>\n                      </form>\n                    )}\n                  />\n                </Card.Content>\n              </Card>\n            </Segment>\n          </Grid.Column>\n        </Grid>\n      </Responsive>\n    );\n  }\n}\n\nLogin.propTypes = {\n  firebase: PropTypes.object.isRequired\n};\n\nexport default compose(\n  firebaseConnect(),\n  connect(\n    (state, props) => ({\n      notify: state.notify\n    }),\n    { notifyUser }\n  )\n)(Login);\n","import {NOTIFY_USER}from './types'\r\n\r\nexport const notifyUser = ( message ,messageType  )=>(\r\n    {\r\n        type:NOTIFY_USER,\r\n        messageType,\r\n        message,\r\n    }\r\n);\r\n\r\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Responsive, Segment, Card, Placeholder } from \"semantic-ui-react\";\nimport { Form, Field } from \"react-final-form\";\nimport { firestoreConnect } from \"react-redux-firebase\";\nimport { Slider } from \"react-semantic-ui-range\";\nimport { connect } from \"react-redux\";\nimport { compose } from \"redux\";\n\nclass SignUp extends Component {\n  onSubmit = values => {\n    const newRobot = values;\n    const { firestore, history } = this.props;\n  };\n  render() {\n    return (\n      <Responsive>\n        <Segment>\n          <Form\n            onSubmit={this.onSubmit}\n            initialValues={{}}\n            render={({ handleSubmit, form, submitting, pristine, values }) => (\n              <form className=\"ui form\" onSubmit={handleSubmit}>\n                <div className=\"fields\">\n                  <div className=\"six wide field\">\n                    <Card fluid>\n                      <Card.Header>\n                        <label>Register</label>\n                      </Card.Header>\n\n                    </Card>\n                  </div>\n                  <div className=\" ten wide field\">\n                    <label>First Name</label>\n                    <Field\n                      name=\"firstName\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"First Name\"\n                    />\n\n                    <label>Last Name</label>\n                    <Field\n                      name=\"lastName\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                    />\n\n                    <label>Email</label>\n                    <Field\n                      name=\"email\"\n                      component=\"input\"\n                      type=\"text\"\n                      placeholder=\"Last Name\"\n                    />\n                  </div>\n                </div>\n\n                <div className=\"field\">\n                  <label>Password</label>\n                  <Field\n                    name=\"password\"\n                    type=\"password\"\n                    component=\"input\"\n                    placeholder=\"password\"\n                  />\n                </div>\n                <div>\n                  <button\n                    className=\"ui primary basic button \"\n                    type=\"submit\"\n                    disabled={submitting || pristine}\n                  >\n                    Submit\n                  </button>\n                  <button\n                    className=\"ui secondary basic button\"\n                    onClick={form.reset}\n                    disabled={submitting || pristine}\n                  >\n                    Reset\n                  </button>\n                </div>\n                <pre>{JSON.stringify(values, 0, 2)}</pre>\n              </form>\n            )}\n          />\n        </Segment>\n      </Responsive>\n    );\n  }\n}\n\nSignUp.propTypes = {\n  firestore: PropTypes.object.isRequired,\n  setting: PropTypes.object.isRequired\n};\nexport default compose(\n  firestoreConnect(),\n  connect((state, props) => ({\n    setting: state.setting\n  }))\n)(SignUp);\n","\r\n\r\nimport {Loader} from \"semantic-ui-react\";\r\n\r\nimport locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\r\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\r\n\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    AuthenticatingComponent: Loader,\r\n    allowRedirectBack: true,\r\n    redirectPath: (state, ownProps) =>\r\n        locationHelper.getRedirectQueryParam(ownProps) || '/login',\r\n    authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n        !auth.isLoaded || isInitializing === true,\r\n    authenticatedSelector: ({ firebase: { auth } }) =>\r\n        auth.isLoaded && !auth.isEmpty\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    AuthenticatingComponent: Loader,\r\n    allowRedirectBack: false,\r\n    redirectPath: (state, ownProps) =>\r\n        locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n        !auth.isLoaded || isInitializing === true,\r\n    authenticatedSelector: ({ firebase: { auth } }) =>\r\n        auth.isLoaded && auth.isEmpty\r\n});","import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport store from \"../../store\";\r\nimport { Provider } from \"react-redux\";\r\nimport CreateRobot from \"../CreateRobot\";\r\nimport DisplayRobot from \"../DisplayRobot/index\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport NavBar from \"../../components/layout/NavBar/index\";\r\nimport Landing from \"../Landing\";\r\nimport editRobot from \"../editRobot\";\r\nimport Login from \"../../components/auth/Login/Login\";\r\nimport Setting from \"../../components/setting/Setting\";\r\nimport SignUp from \"../../components/auth/SignUp/SignUp\";\r\nimport {\r\n  UserIsAuthenticated,\r\n  UserIsNotAuthenticated\r\n} from \"../../helpers/auth\";\r\nclass App extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {};\r\n  }\r\n  // use arrow function to create a scope so that \"this\" refers to App object.\r\n  //Otherwise it points to event,which does not have this.state\r\n\r\n  render() {\r\n    return (\r\n      <Provider store={store}>\r\n        <Router>\r\n          <div className=\"tc\">\r\n            <NavBar>\r\n              <Switch>\r\n                <Route\r\n                  exact\r\n                  path=\"/home\"\r\n                  component={Landing}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/createRobot\"\r\n                  component={UserIsAuthenticated(CreateRobot)}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/viewRobots\"\r\n                  component={UserIsAuthenticated(DisplayRobot)}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/robot/edit/:id\"\r\n                  component={UserIsAuthenticated(editRobot)}\r\n                />\r\n                <Route\r\n                  exact\r\n                  path=\"/login\"\r\n                  component={UserIsNotAuthenticated(Login)}\r\n                />\r\n                <Route exact path=\"/signUp\" component={SignUp} />\r\n                <Route\r\n                    exact\r\n                    path=\"/setting\"\r\n                    component={Setting}\r\n                />\r\n              </Switch>\r\n            </NavBar>\r\n          </div>\r\n        </Router>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
{"version":3,"sources":["components/layout/NavBar/robot.png","reducers/notifyReducer.js","store.js","actions/types.js","containers/CreateRobot/index.js","components/Card/card.js","components/CardList/index.js","components/SearchBox/index.js","components/Scroll/index.js","containers/DisplayRobot/index.js","components/layout/NavBar/NavBarMoblie.js","components/layout/NavBar/NavBarChildren.js","components/layout/NavBar/NavBarDesktop.js","components/layout/NavBar/index.js","containers/editRobot/index.js","containers/Landing/index.js","components/layout/Alert/index.js","components/auth/Login/Login.js","actions/notifyAction.js","helpers/auth.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","initialState","message","messageType","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","store","compose","reactReduxFirebase","userProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestoreReducer","notify","state","arguments","length","undefined","action","type","Object","objectSpread","CreateRobot","onSubmit","values","newRobot","_this$props","_this","props","history","add","collection","then","push","react_default","a","createElement","Responsive","Segment","react_final_form_es","this","initialValues","render","_ref","handleSubmit","form","submitting","pristine","className","Card_Card","fluid","Header","Content","robotId","Placeholder","Image","rectangular","alt","src","concat","name","_ref2","input","meta","build","assign","color","settings","start","min","max","step","onChange","value","component","placeholder","disabled","onClick","reset","JSON","stringify","Component","firestoreConnect","Card","id","email","notes","Modal","closeIcon","trigger","image","wrapped","size","Description","Link","to","Button","delete","doc","console","log","negative","CardList","robots","cardComponent","_","map","robot","card","key","SearchBox","searchfield","searchChange","Scroll","style","overflow","border","height","children","DisplayRobot","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","onDeleteRobot","onSearchChange","event","setState","target","_this2","clients","clientNames","client","firstName","lastName","filteredRobots","filter","toLower","includes","components_SearchBox","components_Scroll","components_CardList","Loader","active","connect","ordered","NavBarMobile","isLogin","onPusherClick","onToggle","visible","onLogoutClick","Sidebar","Pushable","as","Menu","animation","icon","inverted","direction","vertical","Item","NavLink","Pusher","dimmed","fixed","minHeight","position","Icon","NavBarChildren","Container","marginTop","NavBarDesktop","NavBar","isAuthenticated","handlePusher","logout","handleToggle","_this$state","onlyMobile","NavBarMoblie_NavBarMobile","NavBarChildren_NavBarChildren","minWidth","onlyTablet","NavBar_NavBarDesktop","auth","uid","withRouter","firebaseConnect","editRobot","updatedRobot","update","storeAs","match","params","_ref3","Alert","classNames","positive","Login","password","notifyUser","login","catch","err","_this$props$notify","red","ribbon","label","layout_Alert","locationHelper","locationHelperBuilder","UserIsAuthenticated","connectedRouterRedirect","wrapperDisplayName","AuthenticatingComponent","allowRedirectBack","redirectPath","ownProps","getRedirectQueryParam","authenticatingSelector","_ref$firebase","isInitializing","profile","isLoaded","authenticatedSelector","isEmpty","UserIsNotAuthenticated","_ref3$firebase","_ref4","App","es","BrowserRouter","layout_NavBar","Switch","Route","exact","path","Boolean","window","location","hostname","ReactDOM","containers_App_App","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"6EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,mSCElCC,EAAc,CAChBC,QAAQ,KACRC,YAAY,wEC2BhBC,IAASC,cAlBc,CAEfC,OAAQ,0CACZC,WAAY,qCACZC,YAAa,4CACbC,UAAW,qBACXC,cAAe,iCACfC,kBAAmB,eACnBC,MAAO,wCAaVR,IAASS,YAIV,IAgBeC,EAhBiBC,YAC5BC,6BAAmBZ,IAdL,CACda,YAAa,UAcZC,yBAAed,KAFYW,CAG9BI,IAWYC,CARMC,YAAgB,CAChCjB,SAAUkB,kBACTT,UAAWU,mBACPC,ODvCM,WAAuC,IAA7BC,EAA6BC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAArBzB,EAAa4B,EAAQH,UAAAC,OAAA,EAAAD,UAAA,QAAAE,EAClD,OAAQC,EAAOC,MACX,IEVkB,cFWd,OAAAC,OAAAC,EAAA,EAAAD,CAAA,GACON,EADP,CAEIvB,QAAQ2B,EAAO3B,QACfC,YAAa0B,EAAO1B,cAE5B,QACI,OAAOsB,MCkCE,yDE7CfQ,6MAEFC,SAAW,SAAAC,GACP,IAAMC,EAAWD,EADAE,EAEYC,EAAKC,MAA1B1B,EAFSwB,EAETxB,UAAU2B,EAFDH,EAECG,QAClB3B,EAAU4B,IAAI,CAACC,WAAW,WAAWN,GAAUO,KAAKH,EAAQI,KAAK,yFAGrE,OACEC,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACEH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEEJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEhB,SAAUiB,KAAKjB,SACfkB,cAAe,GACfC,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAcC,EAAjBF,EAAiBE,KAAMC,EAAvBH,EAAuBG,WAAYC,EAAnCJ,EAAmCI,SAAUvB,EAA7CmB,EAA6CnB,OAA7C,OACNU,EAAAC,EAAAC,cAAA,QAAMY,UAAU,UAAUzB,SAAUqB,GAClCV,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACXd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,OAAK,GACPhB,EAAAC,EAAAC,cAACa,EAAA,EAAKE,OAAN,KACIjB,EAAAC,EAAAC,cAAA,6BAEJF,EAAAC,EAAAC,cAACa,EAAA,EAAKG,QAAN,UAG6BnC,GAAjBO,EAAO6B,QAAqBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAaJ,OAAK,GAAlB,IAAoBhB,EAAAC,EAAAC,cAACkB,EAAA,EAAYC,MAAb,CAAmBC,aAAW,IAAlD,KAAqEtB,EAAAC,EAAAC,cAAA,OAAKqB,IAAI,SAASC,IAAG,wBAAAC,OAA0BnC,EAAO6B,QAAjC,iBAQ5InB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAAA,0BAEAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOqB,KAAK,WACP,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAHD,EAAUE,KAAV,OAEO7B,EAAAC,EAAAC,cAAC4B,EAAA,OAAD5C,OAAA6C,OAAA,GACYH,EADZ,CAGQI,MAAM,MACNC,SAAU,CACNC,MAAO,EACPC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNC,SAAS,SAAAC,GAAUX,EAAMU,SAASC,UAQ5DvC,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEqB,KAAK,YACLc,UAAU,QACVvD,KAAK,OACLwD,YAAY,eAGdzC,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEqB,KAAK,WACLc,UAAU,QACVvD,KAAK,OACLwD,YAAY,cAGZzC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqB,KAAK,QACLc,UAAU,QACVvD,KAAK,OACLwD,YAAY,gBAOtBzC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACbd,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACEqB,KAAK,QACLc,UAAU,WACVC,YAAY,WAGhBzC,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,UAAQY,UAAU,2BAA2B7B,KAAK,SAASyD,SAAU9B,GAAcC,GAAnF,UAGAb,EAAAC,EAAAC,cAAA,UACIY,UAAU,4BACZ6B,QAAShC,EAAKiC,MACdF,SAAU9B,GAAcC,GAH1B,UAQFb,EAAAC,EAAAC,cAAA,WAAM2C,KAAKC,UAAUxD,EAAQ,EAAG,iBAzGtByD,aAuHXC,+BAAmB5D,gDCrFnB6D,EArCF,SAAAxC,GAA2D,IAAzDU,EAAyDV,EAAzDU,QAAU+B,EAA+CzC,EAA/CyC,GAAKxB,EAA0CjB,EAA1CiB,KAAMyB,EAAoC1C,EAApC0C,MAAOC,EAA6B3C,EAA7B2C,MAAOpF,EAAsByC,EAAtBzC,UAAU2B,EAAYc,EAAZd,aAE1CZ,GAAXoC,IACCA,EAAU+B,GAMd,OAEIlD,EAAAC,EAAAC,cAACmD,EAAA,EAAD,CACIC,WAAS,EACTC,QACAvD,EAAAC,EAAAC,cAAA,OAAKY,UAAU,uDACVd,EAAAC,EAAAC,cAAA,OAAKqB,IAAI,SAASC,IAAG,wBAAAC,OAA0BN,EAA1B,cACnBnB,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAKwB,GACJ1B,EAAAC,EAAAC,cAAA,SAAIiD,GACLnD,EAAAC,EAAAC,cAAA,SAAIkD,MAG3BpD,EAAAC,EAAAC,cAACmD,EAAA,EAAMpC,OAAP,sBACIjB,EAAAC,EAAAC,cAACmD,EAAA,EAAMnC,QAAP,CAAesC,OAAK,GAChBxD,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOoC,SAAO,EAACC,KAAK,SAASlC,IAAG,wBAAAC,OAA0BN,EAA1B,cAChCnB,EAAAC,EAAAC,cAACmD,EAAA,EAAMM,YAAP,KACI3D,EAAAC,EAAAC,cAACe,EAAA,EAAD,KAASS,GACT1B,EAAAC,EAAAC,cAAA,0FACAF,EAAAC,EAAAC,cAAA,0CACAF,EAAAC,EAAAC,cAAA,SAAIkD,GACJpD,EAAAC,EAAAC,cAAC0D,EAAA,EAAD,CAAM9C,UAAU,0BAA0B+C,GAAE,eAAApC,OAAiByB,IAA7D,eACAlD,EAAAC,EAAAC,cAAC4D,EAAA,EAAD,CAAQnB,QA1BI,WAChB3E,EAAU+F,OAAO,CAAClE,WAAW,UAAUmE,IAAId,IAAKpD,KAAKH,EAAQI,KAAK,gBAClEkE,QAAQC,IAAIlG,IAwBsBmG,UAAQ,GAAtC,gCCTGC,EArBE,SAAA3D,GAA+B,IAA7B4D,EAA6B5D,EAA7B4D,OAAOrG,EAAsByC,EAAtBzC,UAAU2B,EAAYc,EAAZd,QAC1B2E,EAAgBC,IAAEC,IAAIH,EAAS,SAACI,GAAD,OACjCzE,EAAAC,EAAAC,cAACwE,EAADxF,OAAA6C,OAAA,CACIpC,QAASA,EACT3B,UAAWA,EACX2G,IAAKF,EAAMvB,IACPuB,MAIZ,OACIzE,EAAAC,EAAAC,cAAA,WACIoE,ICQGM,EArBG,SAAAnE,GAA+BA,EAA7BoE,YAA6B,IAAhBC,EAAgBrE,EAAhBqE,aAE7B,OACI9E,EAAAC,EAAAC,cAAA,OAAKY,UAAY,QAEbd,EAAAC,EAAAC,cAAA,SACAY,UAAY,mCACZ7B,KAAK,SACLwD,YAAY,2BACZH,SAAYwC,MCFTC,EARA,SAACrF,GACZ,OACIM,EAAAC,EAAAC,cAAA,OAAK8E,MAAO,CAAEC,SAAU,SAAUC,OAAQ,kBAAmBC,OAAQ,UAChEzF,EAAM0F,oBCObC,cACF,SAAAA,EAAY3F,GAAO,IAAAD,EAAA,OAAAP,OAAAoG,EAAA,EAAApG,CAAAoB,KAAA+E,IACf5F,EAAAP,OAAAqG,EAAA,EAAArG,CAAAoB,KAAApB,OAAAsG,EAAA,EAAAtG,CAAAmG,GAAAI,KAAAnF,KAAMZ,KAMVgG,cAAe,aAPIjG,EAUnBkG,eAAiB,SAAAC,GACbnG,EAAKoG,SAAS,CAAEhB,YAAae,EAAME,OAAOvD,SAT1C9C,EAAKb,MAAQ,CAETiG,YAAa,IAJFpF,wEAaV,IAAAsG,EAAAzF,KAAAd,EAEiCc,KAAKZ,MAAnCsG,EAFHxG,EAEGwG,QAAQhI,EAFXwB,EAEWxB,UAAU2B,EAFrBH,EAEqBG,QACpBsG,EAAc1B,IAAEC,IAAIwB,EAAS,SAACE,GAAD,OAAAhH,OAAAC,EAAA,EAAAD,CAAA,CAChCwC,KAAKwE,EAAOC,UAAWD,EAAOE,UAC1BF,KAEDG,EAAgB9B,IAAE+B,OAAOL,EAAa,SAACxB,GAAD,OAAWF,IAAEgC,QAAQ9B,EAAM/C,MAClE8E,SAASjC,IAAEgC,QAAQR,EAAKnH,MAAMiG,gBACnC,OAAGmB,EAEKhG,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,MAAIY,UAAU,MAAd,iBACAd,EAAAC,EAAAC,cAACuG,EAAD,CAAW3B,aAAcxE,KAAKqF,iBAC9B3F,EAAAC,EAAAC,cAACwG,EAAD,KAEI1G,EAAAC,EAAAC,cAACyG,EAAD,CAAUhH,QAASA,EAAS3B,UAAWA,EAAWqG,OAAQgC,MAK9DrG,EAAAC,EAAAC,cAAC0G,EAAA,EAAD,CAAQC,QAAM,EAAEnD,KAAK,SAArB,IAA8B1D,EAAAC,EAAAC,cAAA,mCAnCvB6C,aA6CZ7E,cACX8E,2BAAiB,CAAC,CAAEnD,WAAY,aAChCiH,kBAAQ,SAAClI,EAAOc,GAAR,MAAmB,CACvBsG,QAASpH,EAAMZ,UAAU+I,QAAQf,WAH1B9H,CAKbmH,4FC7CW2B,UAAe,SAAAvG,GAAA,IACF2E,EADE3E,EACF2E,SACO6B,EAFLxG,EAEKwG,QACPC,EAHEzG,EAGFyG,cACAC,EAJE1G,EAIF0G,SACAC,EALE3G,EAKF2G,QACOC,EANL5G,EAMK4G,cANL,OASxBrH,EAAAC,EAAAC,cAACoH,EAAA,EAAQC,SAAT,KACIvH,EAAAC,EAAAC,cAACoH,EAAA,EAAD,CACIE,GAAIC,IACJC,UAAU,UACVC,KAAK,UACLC,UAAQ,EACRC,UAAU,QACVC,UAAQ,EACRV,QAASA,GAGLpH,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,CAAYpF,QAASwE,EAAUK,GAAIQ,IAASnE,GAAG,SAA/C,QAGA7D,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,CACIpF,QAASwE,EACTtD,GAAG,eACH2D,GAAIQ,KAHR,gBAMAhI,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,CACIpF,QAASwE,EACTK,GAAIQ,IACJnE,GAAG,eAHP,eAQAoD,EAAWjH,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,CACPpF,QAAU,WACN0E,IACAF,KAEJtD,GAAG,QACH2D,GAAIQ,KANG,WASPhI,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,CACApF,QAASwE,EACTtD,GAAG,SACH2D,GAAIQ,KAHJ,SAQJhI,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,CAEIpF,QAASwE,EACTtD,GAAG,UACH2D,GAAIQ,KAJR,YASRhI,EAAAC,EAAAC,cAACoH,EAAA,EAAQW,OAAT,CACIC,OAAQd,EACRzE,QAASuE,EACTiB,MAAM,MACNnD,MAAO,CAAEoD,UAAW,UAEpBpI,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMU,MAAM,MAAMP,UAAQ,GAGtB5H,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,KACI/H,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOqC,KAAK,OAAOlC,IAAKiD,OAE5BzE,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,KACI/H,EAAAC,EAAAC,cAAA,4BAEJF,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,CAAWM,SAAS,QAAQ1F,QAASwE,GACjCnH,EAAAC,EAAAC,cAACoI,EAAA,EAAD,CAAM5G,KAAK,cAIlB0D,gBCtFAmD,GAAiB,SAAA9H,GAAA,IAAG2E,EAAH3E,EAAG2E,SAAH,OAC1BpF,EAAAC,EAAAC,cAACsI,GAAA,EAAD,CAAWxD,MAAO,CAAEyD,UAAW,QAAUrD,IC6B9BsD,GA1BO,SAAAjI,GAAA,IAAE4G,EAAF5G,EAAE4G,cAAcJ,EAAhBxG,EAAgBwG,QAAhB,OAClBjH,EAAAC,EAAAC,cAACuH,EAAA,EAAD,CAAMU,MAAM,MAAMP,UAAQ,GACtB5H,EAAAC,EAAAC,cAACuH,EAAA,EAAKM,KAAN,KACI/H,EAAAC,EAAAC,cAACmB,EAAA,EAAD,CAAOqC,KAAK,OAAOlC,IAAKiD,OAE5BzE,EAAAC,EAAAC,cAACuH,EAAA,EAAKxG,OAAN,KACIjB,EAAAC,EAAAC,cAAA,MAAIY,UAAU,MAAd,kBAEJd,EAAAC,EAAAC,cAACuH,EAAA,EAAKA,KAAN,CAAWY,SAAS,SAChBrI,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASlH,UAAU,+DACb+C,GAAG,SADT,QAEA7D,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASlH,UAAU,+DACb+C,GAAG,gBADT,gBAEA7D,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASlH,UAAU,+DACb+C,GAAG,eADT,eAEEoD,EAAQjH,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASlH,UAAU,8DACb6B,QAAS0E,EACTxD,GAAG,SAFT,WAEsC7D,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASlH,UAAU,8DAChD+C,GAAG,UAD0B,SAGhD7D,EAAAC,EAAAC,cAAC8H,EAAA,EAAD,CAASlH,UAAU,+DACb+C,GAAG,YADT,cCfN8E,8MACF/J,MAAQ,CACJwI,SAAS,EACTwB,iBAAgB,KAYpBC,aAAe,WACSpJ,EAAKb,MAAjBwI,SAEK3H,EAAKoG,SAAS,CAAEuB,SAAS,OAE9CC,cAAgB,WACS5H,EAAKC,MAAlBnC,SACCuL,YAGTC,aAAe,kBAAMtJ,EAAKoG,SAAS,CAAEuB,SAAU3H,EAAKb,MAAMwI,mFACjD,IACGhC,EAAa9E,KAAKZ,MAAlB0F,SADH4D,EAE+B1I,KAAK1B,MAAjCwI,EAFH4B,EAEG5B,QAAQwB,EAFXI,EAEWJ,gBAChB,OAEI5I,EAAAC,EAAAC,cAAA,WAEIF,EAAAC,EAAAC,cAACC,EAAA,EAAeA,IAAW8I,WACvBjJ,EAAAC,EAAAC,cAACgJ,EAAD,CAEIhC,cAAe5G,KAAKuI,aACpB1B,SAAU7G,KAAKyI,aACf9B,QAAS2B,EACTvB,cAAe/G,KAAK+G,cACpBD,QAASA,GAETpH,EAAAC,EAAAC,cAACiJ,GAAD,KAAiB/D,KAGzBpF,EAAAC,EAAAC,cAACC,EAAA,EAAD,CAAYiJ,SAAUjJ,IAAWkJ,WAAWD,UACxCpJ,EAAAC,EAAAC,cAACoJ,GAAD,CACIrC,QAAS2B,EACTvB,cAAe/G,KAAK+G,gBAExBrH,EAAAC,EAAAC,cAACiJ,GAAD,KAAiB/D,wDA5CL1F,EAAMd,GAGlC,OADiBc,EAAT6J,KACAC,IACG,CAAEZ,iBAAgB,GAElB,CAAEA,iBAAgB,UAZZ7F,aA+DN0G,eAAWvL,YACtBwL,4BACA5C,kBAAQ,SAAClI,EAAMc,GAAP,MAAkB,CACtB6J,KAAK3K,EAAMrB,SAASgM,QAHFrL,CAIjByK,KChFHgB,ICPgB5G,wBDQlB,SAAA4G,EAAYjK,GAAO,IAAAD,EAAA,OAAAP,OAAAoG,EAAA,EAAApG,CAAAoB,KAAAqJ,IACflK,EAAAP,OAAAqG,EAAA,EAAArG,CAAAoB,KAAApB,OAAAsG,EAAA,EAAAtG,CAAAyK,GAAAlE,KAAAnF,KAAMZ,KAGVL,SAAW,SAAAC,GACP,IAAMsK,EAAetK,EADJE,EAEqBC,EAAKC,MAAnC1B,EAFSwB,EAETxB,UAAWkI,EAFF1G,EAEE0G,OAAQvG,EAFVH,EAEUG,QAC3B3B,EAAU6L,OAAO,CAAChK,WAAW,UAAUmE,IAAIkC,EAAOhD,IAAI0G,GAAc9J,KAAKH,EAAQI,KAAK,iBALtFN,EAAKb,MAAQ,GAFEa,wEAUV,IACEyG,EAAY5F,KAAKZ,MAAjBwG,OACP,OAAGA,EAEKlG,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KAEIJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIhB,SAAUiB,KAAKjB,SACfkB,cAAe,CACXY,QAAQ+E,EAAO/E,QACfgF,UAAUD,EAAOC,UACjBC,SAASF,EAAOE,SAChBjD,MAAM+C,EAAO/C,MACbC,MAAM8C,EAAO9C,OAEjB5C,OAAQ,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,aAAcC,EAAjBF,EAAiBE,KAAMC,EAAvBH,EAAuBG,WAAYC,EAAnCJ,EAAmCI,SAAUvB,EAA7CmB,EAA6CnB,OAA7C,OACJU,EAAAC,EAAAC,cAAA,QAAMY,UAAU,UAAUzB,SAAUqB,GAChCV,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACXd,EAAAC,EAAAC,cAAA,OAAKY,UAAU,kBACXd,EAAAC,EAAAC,cAACa,EAAA,EAAD,CAAMC,OAAK,GACPhB,EAAAC,EAAAC,cAACa,EAAA,EAAKE,OAAN,KACIjB,EAAAC,EAAAC,cAAA,6BAEJF,EAAAC,EAAAC,cAACa,EAAA,EAAKG,QAAN,UAEyBnC,GAAjBO,EAAO6B,QAAqBnB,EAAAC,EAAAC,cAACkB,EAAA,EAAD,CAAaJ,OAAK,GAAlB,IAAoBhB,EAAAC,EAAAC,cAACkB,EAAA,EAAYC,MAAb,CAAmBC,aAAW,IAAlD,KAAqEtB,EAAAC,EAAAC,cAAA,OAAKqB,IAAI,SAASC,IAAG,wBAAAC,OAA0BnC,EAAO6B,QAAjC,iBAMtInB,EAAAC,EAAAC,cAAA,OAAKY,UAAU,mBACXd,EAAAC,EAAAC,cAAA,0BAEAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CAAOqB,KAAK,WACP,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,MAAHD,EAAUE,KAAV,OAEG7B,EAAAC,EAAAC,cAAC4B,EAAA,OAAD5C,OAAA6C,OAAA,GACQH,EADR,CAGII,MAAM,MACNC,SAAU,CACNC,MAAO,EACPC,IAAK,EACLC,IAAK,IACLC,KAAM,EACNC,SAAS,SAAAC,GAAUX,EAAMU,SAASC,UAQlDvC,EAAAC,EAAAC,cAAA,2BACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqB,KAAK,YACLc,UAAU,QACVvD,KAAK,OACLwD,YAAY,eAGhBzC,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqB,KAAK,WACLc,UAAU,QACVvD,KAAK,OACLwD,YAAY,cAGhBzC,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqB,KAAK,QACLc,UAAU,QACVvD,KAAK,OACLwD,YAAY,gBAIxBzC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACXd,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqB,KAAK,QACLc,UAAU,WACVC,YAAY,WAGpBzC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,UAAQY,UAAU,2BAA2B7B,KAAK,SAASyD,SAAU9B,GAAcC,GAAnF,UAGAb,EAAAC,EAAAC,cAAA,UACIY,UAAU,4BACV6B,QAAShC,EAAKiC,MACdF,SAAU9B,GAAcC,GAH5B,UAQJb,EAAAC,EAAAC,cAAA,WAAM2C,KAAKC,UAAUxD,EAAQ,EAAG,UASpDU,EAAAC,EAAAC,cAAA,uBAxHQ6C,cAoIT7E,eACX8E,2BAAkB,SAAAtD,GAAK,MAAG,CACtB,CAACG,WAAW,UAAUiK,QAAQ,SAAS9F,IAAItE,EAAMqK,MAAMC,OAAO9G,OAElE4D,kBAAQ,SAAAmD,EAAwBvK,GAAxB,IAAaqH,EAAbkD,EAAEjM,UAAW+I,QAAb,MAAmC,CACvCb,OAAQa,EAAQb,QAAUa,EAAQb,OAAO,MALlChI,CAObyL,uBE9HaO,GAnBD,SAAAzJ,GAA8B,IAA3BpD,EAA2BoD,EAA3BpD,QAASC,EAAkBmD,EAAlBnD,YAEtB,OACI0C,EAAAC,EAAAC,cAAA,OAAKY,UAAWqJ,KAAW,aAAa,CACpCC,SAA0B,YAAhB9M,EACV6G,SAA0B,UAAhB7G,KAEV0C,EAAAC,EAAAC,cAAA,OAAKY,UAAU,UACVzD,KCAXgN,8MAGFhL,SAAW,SAAAoB,GAAsB,IAApB0C,EAAoB1C,EAApB0C,MAAMmH,EAAc7J,EAAd6J,SAAc9K,EAESC,EAAKC,MAAnCnC,EAFqBiC,EAErBjC,SAASoC,EAFYH,EAEZG,QAAQ4K,EAFI/K,EAEJ+K,WACzBhN,EAASiN,MAAM,CAACrH,QAAMmH,aACjBxK,KAAKH,EAAQI,KAAK,gBAClB0K,MAAM,SAAAC,GAAG,OAAIH,EAAW,4BAA4B,oFAEpD,IAAAI,EAC4BrK,KAAKZ,MAAMf,OAApCtB,EADHsN,EACGtN,QAASC,EADZqN,EACYrN,YACjB,OACI0C,EAAAC,EAAAC,cAACC,EAAA,EAAD,KACIH,EAAAC,EAAAC,cAACE,EAAA,EAAD,KACIJ,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIhB,SAAUiB,KAAKjB,SACfkB,cAAe,GAGfC,OAAQ,SAAAmB,GAAA,IAAGjB,EAAHiB,EAAGjB,aAAoBE,GAAvBe,EAAiBhB,KAAjBgB,EAAuBf,YAAYC,EAAnCc,EAAmCd,SAAUvB,EAA7CqC,EAA6CrC,OAA7C,OACJU,EAAAC,EAAAC,cAAA,QAAMY,UAAWqJ,KAAW,UAAU,CAClCS,IAAqB,UAAhBtN,EACLuN,OAAwB,UAAhBvN,EACRwN,MAAsB,UAAhBxN,IACN+B,SAAUqB,GAGNV,EAAAC,EAAAC,cAAA,OAAKY,UAAU,WACXd,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIqB,KAAK,QACLc,UAAU,QACVvD,KAAK,QACLwD,YAAY,WAIxBzC,EAAAC,EAAAC,cAAA,OAAKY,UAAU,SACXd,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAACG,EAAA,EAAD,CACIpB,KAAK,WACLyC,KAAK,WACLe,YAAY,YAEX,SAAAwH,GAAA,IAAErI,EAAFqI,EAAErI,MAAFqI,EAAQpI,KAAR,OACG7B,EAAAC,EAAAC,cAAA,QAAAhB,OAAA6C,OAAA,CAAO9C,KAAK,YAAe2C,OAKrCvE,GAAW2C,EAAAC,EAAAC,cAAC6K,GAAD,CAAO1N,QAASA,EAASC,YAAaA,IACnD0C,EAAAC,EAAAC,cAAA,UAAQY,UAAU,2BAA2B7B,KAAK,SAASyD,SAAU9B,GAAcC,GAAnF,SAGAb,EAAAC,EAAAC,cAAA,WAAM2C,KAAKC,UAAUxD,EAAQ,EAAG,iBAvD5CyD,aAqEL7E,eAAQwL,4BACnB5C,kBAAQ,SAAClI,EAAMc,GAAP,MAAgB,CACrBf,OAAOC,EAAMD,SACb,CAAC4L,WClFkB,SAAElN,EAASC,GAAX,MACtB,CACI2B,KfJkB,ceKlB3B,cACAD,cD2EOa,CAITmM,mCE7EAW,GAAiBC,KAAsB,IAEhCC,GAAsBC,mCAAwB,CACvDC,mBAAoB,sBACpBC,wBAAyBzE,IACzB0E,mBAAmB,EACnBC,aAAc,SAAC3M,EAAO4M,GAAR,OACVR,GAAeS,sBAAsBD,IAAa,UACtDE,uBAAwB,SAAAjL,GAAA,IAAAkL,EAAAlL,EAAGlD,SAAYgM,EAAfoC,EAAepC,KAAeqC,GAA9BD,EAAqBE,QAArBF,EAA8BC,gBAA9B,OACnBrC,EAAKuC,WAA+B,IAAnBF,GACtBG,sBAAuB,SAAApK,GAAA,IAAe4H,EAAf5H,EAAGpE,SAAYgM,KAAf,OACnBA,EAAKuC,WAAavC,EAAKyC,WAGlBC,GAAyBd,mCAAwB,CAC1DC,mBAAoB,yBACpBC,wBAAyBzE,IACzB0E,mBAAmB,EACnBC,aAAc,SAAC3M,EAAO4M,GAAR,OACVR,GAAeS,sBAAsBD,IAAa,KACtDE,uBAAwB,SAAAzB,GAAA,IAAAiC,EAAAjC,EAAG1M,SAAYgM,EAAf2C,EAAe3C,KAAMqC,EAArBM,EAAqBN,eAArB,OACnBrC,EAAKuC,WAA+B,IAAnBF,GACtBG,sBAAuB,SAAAI,GAAA,IAAe5C,EAAf4C,EAAG5O,SAAYgM,KAAf,OACnBA,EAAKuC,UAAYvC,EAAKyC,WCkCfI,eAjDb,SAAAA,EAAY1M,GAAO,IAAAD,EAAA,OAAAP,OAAAoG,EAAA,EAAApG,CAAAoB,KAAA8L,IACjB3M,EAAAP,OAAAqG,EAAA,EAAArG,CAAAoB,KAAApB,OAAAsG,EAAA,EAAAtG,CAAAkN,GAAA3G,KAAAnF,KAAMZ,KACDd,MAAQ,GAFIa,wEAQjB,OACEO,EAAAC,EAAAC,cAACmM,EAAA,SAAD,CAAUpO,MAAOA,GACf+B,EAAAC,EAAAC,cAACoM,EAAA,EAAD,KACEtM,EAAAC,EAAAC,cAAA,OAAKY,UAAU,MACbd,EAAAC,EAAAC,cAACqM,GAAD,KACEvM,EAAAC,EAAAC,cAACsM,EAAA,EAAD,KACExM,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,QACLnK,UAAWyJ,GAAuB5B,MAEpCrK,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,eACLnK,UAAW0I,GAAoB9L,KAEjCY,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,cACLnK,UAAW0I,GAAoB7F,KAEjCrF,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,kBACLnK,UAAW0I,GAAoBvB,MAEjC3J,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CACEC,OAAK,EACLC,KAAK,SACLnK,UAAWyJ,GAAuB5B,MAEpCrK,EAAAC,EAAAC,cAACuM,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,UAAUnK,UAAW6C,gBAxCrCtC,aCHE6J,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAAShD,MACvB,kECTNiD,IAASxM,OAAOR,EAAAC,EAAAC,cAAC+M,GAAD,MAAQC,SAASC,eAAe,SDwH1C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMxN,KAAK,SAAAyN,GACjCA,EAAaC","file":"static/js/main.d52c4ea9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/robot.388b052a.png\";","import {NOTIFY_USER } from '../actions/types'\r\n\r\nconst initialState ={\r\n    message:null,\r\n    messageType:null,\r\n};\r\n\r\n\r\nexport default function (state = initialState,action) {\r\n    switch (action.type) {\r\n        case NOTIFY_USER:\r\n            return{\r\n                ...state,\r\n                message:action.message,\r\n                messageType: action.messageType,\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}","import React from 'react'\r\nimport { render } from 'react-dom'\r\nimport { Provider } from 'react-redux'\r\nimport notifyReducer from './reducers/notifyReducer.js'\r\nimport { createStore, combineReducers, compose } from 'redux'\r\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase'\r\nimport firebase from 'firebase/app'\r\nimport  'firebase/auth'\r\nimport  'firebase/database'\r\nimport 'firebase/firestore' // <- needed if using firestore\r\n// import 'firebase/functions' // <- needed if using httpsCallable\r\n import { reduxFirestore, firestoreReducer } from 'redux-firestore' // <- needed if using firestore\r\n\r\nconst firebaseConfig = {\r\n\r\n        apiKey: \"AIzaSyC6rHHcP2S1RHoKZG8dZrcFIRX_T7Q4klY\",\r\n    authDomain: \"robot-friend-b4cd3.firebaseapp.com\",\r\n    databaseURL: \"https://robot-friend-b4cd3.firebaseio.com\",\r\n    projectId: \"robot-friend-b4cd3\",\r\n    storageBucket: \"robot-friend-b4cd3.appspot.com\",\r\n    messagingSenderId: \"202082833271\",\r\n    appId: \"1:202082833271:web:c1402d43dbc35061\"\r\n}\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    // useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n};\r\n\r\n// Initialize firebase instance\r\nfirebase.initializeApp(firebaseConfig)\r\n\r\n// Initialize other services on firebase instance\r\n firebase.firestore() // <- needed if using firestore\r\n// firebase.functions() // <- needed if using httpsCallable\r\n\r\n// Add reactReduxFirebase enhancer when making store creator\r\nconst createStoreWithFirebase = compose(\r\n    reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\r\n     reduxFirestore(firebase) // <- needed if using firestore\r\n)(createStore)\r\n\r\n// Add firebase to reducers\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n     firestore: firestoreReducer ,// <- needed if using firestore\r\n         notify: notifyReducer,\r\n})\r\n\r\n// Create store with reducers and initial state\r\nconst initialState = {}\r\nconst store = createStoreWithFirebase(rootReducer, initialState)\r\n\r\nexport default store;","export const NOTIFY_USER ='NOTIFY_USER';\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport { Responsive, Segment ,Card, Placeholder } from \"semantic-ui-react\";\r\nimport { Form, Field, } from \"react-final-form\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport { Slider } from 'react-semantic-ui-range'\r\nclass CreateRobot extends Component {\r\n\r\n    onSubmit = values => {\r\n        const newRobot = values;\r\n        const { firestore,history } =this.props;\r\n        firestore.add({collection:'clients'},newRobot).then(history.push('/viewRobots'));\r\n    };\r\n  render() {\r\n    return (\r\n      <Responsive>\r\n        <Segment>\r\n\r\n          <Form\r\n            onSubmit={this.onSubmit}\r\n            initialValues={{}}\r\n            render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n              <form className=\"ui form\" onSubmit={handleSubmit}>\r\n                <div className=\"fields\">\r\n                    <div className=\"six wide field\">\r\n                        <Card fluid>\r\n                            <Card.Header>\r\n                                <label>Robot image</label>\r\n                            </Card.Header>\r\n                            <Card.Content>\r\n\r\n                                    {\r\n                                        values.robotId ==undefined ?<Placeholder fluid> <Placeholder.Image rectangular /> </Placeholder>:<img alt='robots' src={`https://robohash.org/${values.robotId}?200*200`}/>\r\n                                    }\r\n\r\n\r\n\r\n                            </Card.Content>\r\n                        </Card>\r\n                    </div>\r\n                  <div className=\" ten wide field\">\r\n                      <label>Angriness</label>\r\n\r\n                      <Field name=\"robotId\" >\r\n                          {({ input, meta }) =>(\r\n\r\n                                  <Slider\r\n                                          {...input}\r\n\r\n                                          color=\"red\"\r\n                                          settings={{\r\n                                              start: 2,\r\n                                              min: 0,\r\n                                              max: 100,\r\n                                              step: 1,\r\n                                              onChange:value =>{ input.onChange(value)}\r\n                                          }}\r\n                                  />\r\n\r\n\r\n                          ) }\r\n                      </Field>\r\n\r\n                    <label>First Name</label>\r\n                    <Field\r\n                      name=\"firstName\"\r\n                      component=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"First Name\"\r\n                    />\r\n\r\n                    <label>Last Name</label>\r\n                    <Field\r\n                      name=\"lastName\"\r\n                      component=\"input\"\r\n                      type=\"text\"\r\n                      placeholder=\"Last Name\"\r\n                    />\r\n\r\n                      <label>Email</label>\r\n                      <Field\r\n                          name=\"email\"\r\n                          component=\"input\"\r\n                          type=\"text\"\r\n                          placeholder=\"Last Name\"\r\n                      />\r\n                  </div>\r\n                </div>\r\n\r\n\r\n\r\n                <div className=\"field\">\r\n                  <label>Notes</label>\r\n                  <Field\r\n                    name=\"notes\"\r\n                    component=\"textarea\"\r\n                    placeholder=\"Notes\"\r\n                  />\r\n                </div>\r\n                <div >\r\n                  <button className='ui primary basic button ' type=\"submit\" disabled={submitting || pristine}>\r\n                    Submit\r\n                  </button>\r\n                  <button\r\n                      className='ui secondary basic button'\r\n                    onClick={form.reset}\r\n                    disabled={submitting || pristine}\r\n                  >\r\n                    Reset\r\n                  </button>\r\n                </div>\r\n                <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n              </form>\r\n            )}\r\n          />\r\n        </Segment>\r\n      </Responsive>\r\n    );\r\n  }\r\n}\r\n\r\nCreateRobot.propTypes = {\r\n    firestore:PropTypes.object.isRequired,\r\n};\r\n\r\nexport default firestoreConnect()(CreateRobot) ;\r\n","import React,{useState} from 'react';\r\nimport { Button, Header, Image, Modal } from 'semantic-ui-react'\r\nimport { Link } from 'react-router-dom';\r\nconst Card = ({robotId , id , name ,email, notes, firestore,history}) =>{\r\n\r\n    if(robotId == undefined){\r\n        robotId = id\r\n    }\r\n    const deleteRobot = ()=>{\r\n        firestore.delete({collection:'clients',doc:id}).then(history.push('/viewRobots'))\r\n        console.log(firestore)\r\n    };\r\n    return(\r\n\r\n        <Modal\r\n            closeIcon\r\n            trigger={\r\n            <div className='bg-light-green dib br3 pa3 ma2 grow tc bw2 shadow-5'>\r\n                 <img alt='robots' src={`https://robohash.org/${robotId}?100*100`}/>\r\n                   <div>\r\n                       <h2>{name}</h2>\r\n                        <p>{email}</p>\r\n                       <p>{notes}</p>\r\n                   </div>\r\n            </div>}>\r\n<Modal.Header>Robot Details</Modal.Header>\r\n    <Modal.Content image>\r\n        <Image wrapped size='medium' src={`https://robohash.org/${robotId}?100*100`} />\r\n        <Modal.Description>\r\n            <Header>{name}</Header>\r\n            <p>We've found the following gravatar image associated with your e-mail address.</p>\r\n            <p>Is it okay to use this photo?</p>\r\n            <p>{notes}</p>\r\n            <Link className='ui button basic primary' to={`/robot/edit/${id}`}> Edit Robot</Link>\r\n            <Button onClick={deleteRobot} negative> Delete</Button>\r\n        </Modal.Description>\r\n    </Modal.Content>\r\n    </Modal>\r\n    )\r\n};\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/card';\r\nimport _ from 'lodash'\r\n\r\nconst CardList = ({robots,firestore,history}) =>{\r\n    const cardComponent = _.map(robots , (robot) =>(\r\n        <Card\r\n            history={history}\r\n            firestore={firestore}\r\n            key={robot.id}\r\n            {...robot}\r\n        />\r\n    ) );\r\n\r\n    return (\r\n        <div>\r\n           {cardComponent}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\n\r\nconst SearchBox = ({searchfield, searchChange})=>{\r\n\r\n    return(\r\n        <div className = 'pa2 '>\r\n\r\n            <input \r\n            className = 'pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='Search for Robot friends'\r\n            onChange = {searchChange}\r\n            />\r\n        </div>    \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CardList from \"../../components/CardList\";\r\nimport SearchBox from \"../../components/SearchBox\";\r\nimport {compose} from \"redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport {connect} from \"react-redux\";\r\nimport _ from 'lodash';\r\nimport Scroll from '../../components/Scroll';\r\nimport {\r\n    Loader\r\n} from \"semantic-ui-react\";\r\nclass DisplayRobot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            searchfield: \"\"\r\n        };\r\n    }\r\n    onDeleteRobot =() =>{\r\n\r\n    }\r\n    onSearchChange = event => {\r\n        this.setState({ searchfield: event.target.value });\r\n    };\r\n    render() {\r\n\r\n        const { clients,firestore,history } = this.props;\r\n        const clientNames = _.map(clients, (client)=>({\r\n           name:client.firstName +client.lastName,\r\n            ...client\r\n        }));\r\n        const filteredRobots =_.filter(clientNames, (robot)=>( _.toLower(robot.name)\r\n            .includes(_.toLower(this.state.searchfield))));\r\n        if(clients){\r\n            return (\r\n                <div>\r\n                    <h1 className='f1'>Robot Friends</h1>\r\n                    <SearchBox searchChange={this.onSearchChange} />\r\n                    <Scroll>\r\n\r\n                        <CardList history={history} firestore={firestore} robots={filteredRobots} />\r\n                    </Scroll>\r\n                </div>\r\n            )\r\n        }else {\r\n            return( <Loader active  size='large'> <h3 >Making robots</h3></Loader>)\r\n        }\r\n\r\n    }\r\n}\r\n\r\nDisplayRobot.propTypes = {\r\n    clients:PropTypes.array,\r\n};\r\n\r\nexport default compose(\r\n    firestoreConnect([{ collection: \"clients\" }]),\r\n    connect((state, props) => ({\r\n        clients: state.firestore.ordered.clients,\r\n    }))\r\n)(DisplayRobot);\r\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { NavLink } from 'react-router-dom'\r\nimport robot from './robot.png'\r\nimport {\r\n    Container,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Sidebar,\r\n    Sticky,\r\n    Responsive\r\n} from \"semantic-ui-react\";\r\nimport './NavBar.css'\r\n\r\n\r\nexport const NavBarMobile = ({\r\n                          children,\r\n                                 isLogin,\r\n                          onPusherClick,\r\n                          onToggle,\r\n                          visible,\r\n                                 onLogoutClick\r\n                      }) => (\r\n\r\n    <Sidebar.Pushable>\r\n        <Sidebar\r\n            as={Menu}\r\n            animation=\"overlay\"\r\n            icon=\"labeled\"\r\n            inverted\r\n            direction='right'\r\n            vertical\r\n            visible={visible}\r\n        >\r\n\r\n                <Menu.Item  onClick={onToggle} as={NavLink} to='/home' >\r\n                    Home\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                    onClick={onToggle}\r\n                    to=\"/createRobot\"\r\n                    as={NavLink} >\r\n                    Create Robot\r\n                </Menu.Item>\r\n                <Menu.Item\r\n                    onClick={onToggle }\r\n                    as={NavLink}\r\n                    to=\"/viewRobots\"\r\n                >\r\n                    View Robots\r\n                </Menu.Item>\r\n            {\r\n                isLogin ?  <Menu.Item\r\n                    onClick={ () => {\r\n                        onLogoutClick();\r\n                        onToggle();\r\n                    }}\r\n                    to=\"/home\"\r\n                    as={NavLink}>\r\n                    Log out\r\n                </Menu.Item>   :\r\n                    <Menu.Item\r\n                    onClick={onToggle}\r\n                    to=\"/login\"\r\n                    as={NavLink}>\r\n                    Login\r\n                </Menu.Item>\r\n            }\r\n\r\n                <Menu.Item\r\n\r\n                    onClick={onToggle}\r\n                    to=\"/signUp\"\r\n                    as={NavLink}>\r\n                    Sign up\r\n                </Menu.Item>\r\n\r\n        </Sidebar>\r\n        <Sidebar.Pusher\r\n            dimmed={visible}\r\n            onClick={onPusherClick}\r\n            fixed=\"top\"\r\n            style={{ minHeight: \"100vh\" }}\r\n        >\r\n            <Menu fixed=\"top\" inverted >\r\n\r\n\r\n                <Menu.Item>\r\n                    <Image size=\"mini\" src={robot} />\r\n                </Menu.Item >\r\n                <Menu.Item>\r\n                    <h4 >Robot Friends</h4>\r\n                </Menu.Item >\r\n                <Menu.Item position=\"right\" onClick={onToggle}>\r\n                    <Icon name=\"sidebar\" />\r\n                </Menu.Item>\r\n\r\n            </Menu>\r\n            {children}\r\n        </Sidebar.Pusher>\r\n    </Sidebar.Pushable>\r\n\r\n);\r\n\r\n\r\n","\r\nimport _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport {Link } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Sidebar,\r\n    Responsive\r\n} from \"semantic-ui-react\";\r\n\r\nexport const NavBarChildren = ({ children }) => (\r\n    <Container style={{ marginTop: \"5em\" }}>{children}</Container>\r\n);","\r\nimport _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport robot from './robot.png'\r\n\r\nimport { NavLink } from 'react-router-dom'\r\nimport {\r\n    Container,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Sidebar,\r\n    Responsive,\r\n    Button\r\n} from \"semantic-ui-react\";\r\n\r\n\r\nconst NavBarDesktop = ({onLogoutClick,isLogin}) => (\r\n    <Menu fixed=\"top\" inverted>\r\n        <Menu.Item>\r\n            <Image size=\"mini\" src={robot} />\r\n        </Menu.Item>\r\n        <Menu.Header>\r\n            <h5 className='f1'>Robot Friends</h5>\r\n        </Menu.Header>\r\n        <Menu.Menu position=\"right\">\r\n            <NavLink className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\r\n                  to=\"/home\" >Home</NavLink>\r\n            <NavLink className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\r\n                  to=\"/createRobot\" >Create Robot</NavLink>\r\n            <NavLink className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\r\n                  to=\"/viewRobots\" >View Robots</NavLink>\r\n            { isLogin?<NavLink className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\r\n                            onClick={onLogoutClick}\r\n                            to=\"/home\" >Log out</NavLink>  :<NavLink className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\r\n                               to=\"/login\" >Login</NavLink>}\r\n\r\n            <NavLink className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l \"\r\n                  to=\"/signUp \" >Sign up</NavLink>\r\n\r\n        </Menu.Menu>\r\n    </Menu>\r\n);\r\nexport default NavBarDesktop;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport CreateRobot from '../../../containers/CreateRobot';\r\nimport {compose} from \"redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport { withRouter } from 'react-router-dom'\r\nimport { firebaseConnect } from 'react-redux-firebase'\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    Container,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Sidebar,\r\n    Responsive\r\n} from \"semantic-ui-react\";\r\nimport {NavBarMobile} from './NavBarMoblie'\r\nimport {NavBarChildren} from './NavBarChildren'\r\nimport NavBarDesktop from './NavBarDesktop'\r\n\r\n\r\n\r\nclass NavBar extends Component {\r\n    state = {\r\n        visible: false,\r\n        isAuthenticated:false,\r\n    };\r\n\r\nstatic getDerivedStateFromProps(props,state){\r\n\r\n    const { auth } = props;\r\n    if(auth.uid){\r\n        return { isAuthenticated:true}\r\n    }else {\r\n        return { isAuthenticated:false}\r\n    }\r\n}\r\n    handlePusher = () => {\r\n        const { visible } = this.state;\r\n\r\n        if (visible) this.setState({ visible: false });\r\n    };\r\nonLogoutClick = () => {\r\n    const { firebase } = this.props;\r\n    firebase.logout();\r\n};\r\n\r\n    handleToggle = () => this.setState({ visible: !this.state.visible });\r\n    render() {\r\n        const { children } = this.props;\r\n        const { visible,isAuthenticated } = this.state;\r\n        return (\r\n\r\n            <div>\r\n\r\n                <Responsive {...Responsive.onlyMobile}>\r\n                    <NavBarMobile\r\n\r\n                        onPusherClick={this.handlePusher}\r\n                        onToggle={this.handleToggle}\r\n                        isLogin={isAuthenticated}\r\n                        onLogoutClick={this.onLogoutClick}\r\n                        visible={visible}\r\n                    >\r\n                        <NavBarChildren>{children}</NavBarChildren>\r\n                    </NavBarMobile>\r\n                </Responsive>\r\n                <Responsive minWidth={Responsive.onlyTablet.minWidth}>\r\n                    <NavBarDesktop\r\n                        isLogin={isAuthenticated}\r\n                        onLogoutClick={this.onLogoutClick}\r\n                    />\r\n                    <NavBarChildren>{children}</NavBarChildren>\r\n                </Responsive>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n// NavBar.propTypes = {\r\n//     firebase:PropTypes.object.isRequired,\r\n//     auth:PropTypes.object.isRequired,\r\n// };\r\n//\r\nexport default withRouter(compose(\r\n    firebaseConnect(),\r\n    connect((state,props) => ({\r\n        auth:state.firebase.auth,\r\n    })))(NavBar));\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {compose} from \"redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport {connect} from \"react-redux\";\r\n\r\nimport {Card, Placeholder, Responsive, Segment} from \"semantic-ui-react\";\r\nimport {Field, Form} from \"react-final-form\";\r\nimport {Slider} from \"react-semantic-ui-range\";\r\n\r\nclass editRobot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {};\r\n    }\r\n    onSubmit = values => {\r\n        const updatedRobot = values;\r\n        const { firestore, client, history } =this.props;\r\n        firestore.update({collection:'clients',doc:client.id},updatedRobot).then(history.push('/viewRobots'));\r\n    };\r\n\r\n    render() {\r\n        const {client  } = this.props;\r\n        if(client){\r\n            return (\r\n                <Responsive>\r\n                    <Segment>\r\n\r\n                        <Form\r\n                            onSubmit={this.onSubmit}\r\n                            initialValues={{\r\n                                robotId:client.robotId,\r\n                                firstName:client.firstName,\r\n                                lastName:client.lastName,\r\n                                email:client.email,\r\n                                notes:client.notes\r\n                            }}\r\n                            render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                                <form className=\"ui form\" onSubmit={handleSubmit}>\r\n                                    <div className=\"fields\">\r\n                                        <div className=\"six wide field\">\r\n                                            <Card fluid>\r\n                                                <Card.Header>\r\n                                                    <label>Robot image</label>\r\n                                                </Card.Header>\r\n                                                <Card.Content>\r\n                                                    {\r\n                                                        values.robotId ==undefined ?<Placeholder fluid> <Placeholder.Image rectangular /> </Placeholder>:<img alt='robots' src={`https://robohash.org/${values.robotId}?200*200`}/>\r\n                                                    }\r\n\r\n                                                </Card.Content>\r\n                                            </Card>\r\n                                        </div>\r\n                                        <div className=\" ten wide field\">\r\n                                            <label>Angriness</label>\r\n\r\n                                            <Field name=\"robotId\" >\r\n                                                {({ input, meta }) =>(\r\n\r\n                                                    <Slider\r\n                                                        {...input}\r\n\r\n                                                        color=\"red\"\r\n                                                        settings={{\r\n                                                            start: 2,\r\n                                                            min: 0,\r\n                                                            max: 100,\r\n                                                            step: 1,\r\n                                                            onChange:value =>{ input.onChange(value)}\r\n                                                        }}\r\n                                                    />\r\n\r\n\r\n                                                ) }\r\n                                            </Field>\r\n\r\n                                            <label>First Name</label>\r\n                                            <Field\r\n                                                name=\"firstName\"\r\n                                                component=\"input\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"First Name\"\r\n                                            />\r\n\r\n                                            <label>Last Name</label>\r\n                                            <Field\r\n                                                name=\"lastName\"\r\n                                                component=\"input\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last Name\"\r\n                                            />\r\n\r\n                                            <label>Email</label>\r\n                                            <Field\r\n                                                name=\"email\"\r\n                                                component=\"input\"\r\n                                                type=\"text\"\r\n                                                placeholder=\"Last Name\"\r\n                                            />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"field\">\r\n                                        <label>Notes</label>\r\n                                        <Field\r\n                                            name=\"notes\"\r\n                                            component=\"textarea\"\r\n                                            placeholder=\"Notes\"\r\n                                        />\r\n                                    </div>\r\n                                    <div >\r\n                                        <button className='ui primary basic button ' type=\"submit\" disabled={submitting || pristine}>\r\n                                            Submit\r\n                                        </button>\r\n                                        <button\r\n                                            className='ui secondary basic button'\r\n                                            onClick={form.reset}\r\n                                            disabled={submitting || pristine}\r\n                                        >\r\n                                            Reset\r\n                                        </button>\r\n                                    </div>\r\n                                    <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n                                </form>\r\n                            )}\r\n                        />\r\n                    </Segment>\r\n                </Responsive>\r\n            )\r\n        }else {\r\n            return (\r\n                <h1>hi</h1>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n\r\neditRobot.propTypes = {\r\n    clients:PropTypes.array,\r\n    firestore:PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(\r\n    firestoreConnect( props =>[\r\n        {collection:'clients',storeAs:'client',doc:props.match.params.id}\r\n    ]),\r\n    connect(({firestore:{ordered}}, props) => ({\r\n        client: ordered.client && ordered.client[0]\r\n    }))\r\n)(editRobot);","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Landing extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>Landing page</h1>\r\n                <p className='alert'> ?????</p>\r\n                <i className=\"tw flag\"></i>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nLanding.propTypes = {};\r\n\r\nexport default Landing;\r\n","import React from 'react';\r\nimport classNames from 'classnames'\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Alert = ({ message, messageType }) => {\r\n\r\n    return (\r\n        <div className={classNames('ui message',{\r\n            positive: messageType === 'success',\r\n            negative: messageType === 'error',\r\n        })}>\r\n            <div className=\"header\">\r\n                {message}\r\n            </div>\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nAlert.propTypes = {\r\n\r\n};\r\n\r\nexport default Alert;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {compose} from \"redux\";\r\nimport classNames from 'classnames'\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport {connect} from \"react-redux\";\r\nimport { Form, Field, } from \"react-final-form\";\r\nimport { firebaseConnect } from 'react-redux-firebase'\r\nimport {Button, Card, Grid, Header, Image, Message, Placeholder, Responsive, Segment} from 'semantic-ui-react'\r\nimport {Slider} from \"react-semantic-ui-range\";\r\nimport { notifyUser} from \"../../../actions/notifyAction\";\r\nimport Alert from '../../layout/Alert'\r\nclass Login extends Component {\r\n\r\n\r\n    onSubmit = ({email,password}) => {\r\n\r\n        const { firebase,history,notifyUser} =this.props;\r\n        firebase.login({email,password})\r\n            .then(history.push('/viewRobots'))\r\n            .catch(err => notifyUser('Invalid Login Credentials','error'))\r\n    };\r\n    render() {\r\n        const { message ,messageType } = this.props.notify;\r\n        return (\r\n            <Responsive>\r\n                <Segment>\r\n                    <Form\r\n                        onSubmit={this.onSubmit}\r\n                        initialValues={{\r\n\r\n                        }}\r\n                        render={({ handleSubmit, form, submitting, pristine, values }) => (\r\n                            <form className={classNames(\"ui form\",{\r\n                                red: messageType === 'error',\r\n                                ribbon: messageType === 'error',\r\n                                label:messageType === 'error',\r\n                            })} onSubmit={handleSubmit}>\r\n\r\n\r\n                                    <div className=\"  field\">\r\n                                        <label>Email</label>\r\n                                        <Field\r\n                                            name=\"email\"\r\n                                            component=\"input\"\r\n                                            type=\"email\"\r\n                                            placeholder=\"Email\"\r\n                                        />\r\n                                    </div>\r\n\r\n                                <div className=\"field\">\r\n                                    <label>Passwords</label>\r\n                                    <Field\r\n                                        type='password'\r\n                                        name=\"password\"\r\n                                        placeholder=\"Password\"\r\n                                    >\r\n                                        {({input,meta})=>(\r\n                                            <input type='password' {...input}/>\r\n                                            )\r\n                                        }\r\n                                    </Field>\r\n                                </div>\r\n                                { message && <Alert message={message} messageType={messageType}/>}\r\n                                <button className='ui primary basic button ' type=\"submit\" disabled={submitting || pristine}>\r\n                                    Login\r\n                                </button>\r\n                                <pre>{JSON.stringify(values, 0, 2)}</pre>\r\n                            </form>\r\n                        )}\r\n                    />\r\n                </Segment>\r\n            </Responsive>\r\n        );\r\n    }\r\n}\r\n\r\nLogin.propTypes = {\r\n    firebase:PropTypes.object.isRequired,\r\n};\r\n\r\nexport default compose(firebaseConnect(),\r\n    connect((state,props)=>({\r\n       notify:state.notify,\r\n    }),{notifyUser})\r\n    )(Login);\r\n","import {NOTIFY_USER}from './types'\r\n\r\nexport const notifyUser = ( message ,messageType  )=>(\r\n    {\r\n        type:NOTIFY_USER,\r\n        messageType,\r\n        message,\r\n    }\r\n);\r\n\r\n","\r\n\r\nimport {Loader} from \"semantic-ui-react\";\r\n\r\nimport locationHelperBuilder from 'redux-auth-wrapper/history4/locationHelper';\r\nimport { connectedRouterRedirect } from 'redux-auth-wrapper/history4/redirect';\r\n\r\n\r\nconst locationHelper = locationHelperBuilder({});\r\n\r\nexport const UserIsAuthenticated = connectedRouterRedirect({\r\n    wrapperDisplayName: 'UserIsAuthenticated',\r\n    AuthenticatingComponent: Loader,\r\n    allowRedirectBack: true,\r\n    redirectPath: (state, ownProps) =>\r\n        locationHelper.getRedirectQueryParam(ownProps) || '/login',\r\n    authenticatingSelector: ({ firebase: { auth, profile, isInitializing } }) =>\r\n        !auth.isLoaded || isInitializing === true,\r\n    authenticatedSelector: ({ firebase: { auth } }) =>\r\n        auth.isLoaded && !auth.isEmpty\r\n});\r\n\r\nexport const UserIsNotAuthenticated = connectedRouterRedirect({\r\n    wrapperDisplayName: 'UserIsNotAuthenticated',\r\n    AuthenticatingComponent: Loader,\r\n    allowRedirectBack: false,\r\n    redirectPath: (state, ownProps) =>\r\n        locationHelper.getRedirectQueryParam(ownProps) || '/',\r\n    authenticatingSelector: ({ firebase: { auth, isInitializing } }) =>\r\n        !auth.isLoaded || isInitializing === true,\r\n    authenticatedSelector: ({ firebase: { auth } }) =>\r\n        auth.isLoaded && auth.isEmpty\r\n});","import React, { Component } from \"react\";\nimport \"./App.css\";\nimport store from \"../../store\";\nimport { Provider } from \"react-redux\";\nimport CreateRobot from \"../CreateRobot\";\nimport DisplayRobot from \"../DisplayRobot/index\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport NavBar from \"../../components/layout/NavBar/index\";\nimport Landing from \"../Landing\";\nimport editRobot from \"../editRobot\";\nimport Login from \"../../components/auth/Login/Login\";\nimport {\n  UserIsAuthenticated,\n  UserIsNotAuthenticated\n} from \"../../helpers/auth\";\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  // use arrow function to create a scope so that \"this\" refers to App object.\n  //Otherwise it points to event,which does not have this.state\n\n  render() {\n    return (\n      <Provider store={store}>\n        <Router>\n          <div className=\"tc\">\n            <NavBar>\n              <Switch>\n                <Route\n                  exact\n                  path=\"/home\"\n                  component={UserIsNotAuthenticated(Login)}\n                />\n                <Route\n                  exact\n                  path=\"/createRobot\"\n                  component={UserIsAuthenticated(CreateRobot)}\n                />\n                <Route\n                  exact\n                  path=\"/viewRobots\"\n                  component={UserIsAuthenticated(DisplayRobot)}\n                />\n                <Route\n                  exact\n                  path=\"/robot/edit/:id\"\n                  component={UserIsAuthenticated(editRobot)}\n                />\n                <Route\n                  exact\n                  path=\"/login\"\n                  component={UserIsNotAuthenticated(Login)}\n                />\n                <Route exact path=\"/signUp\" component={DisplayRobot} />\n              </Switch>\n            </NavBar>\n          </div>\n        </Router>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}
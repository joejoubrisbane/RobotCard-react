{"version":3,"sources":["store.js","containers/CreateRobot/index.js","components/Card/card.js","components/CardList/index.js","components/SearchBox/index.js","components/Scroll/index.js","containers/DisplayRobot/index.js","components/layout/NavBar/NavBarMoblie.js","components/layout/NavBar/NavBarChildren.js","components/layout/NavBar/NavBarDesktop.js","components/layout/NavBar/index.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","settings","timestampsInSnapshots","store","compose","reactReduxFirebase","userProfile","useFirestoreForProfile","reduxFirestore","createStore","createStoreWithFirebase","combineReducers","firebaseReducer","firestoreReducer","window","__REDUX_DEVTOOLS_EXTENSION__","CreateRobot","react_default","a","createElement","Component","Card","props","className","alt","src","concat","id","name","email","CardList","_ref","robots","cardComponent","_","map","robot","card","key","SearchBox","searchfield","searchChange","type","placeholder","onChange","Scroll","style","overflow","border","height","children","DisplayRobot","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","onSearchChange","event","setState","target","value","state","_this2","clients","filteredRobots","filter","toLocaleLowerCase","includes","components_Scroll","components_SearchBox","components_CardList","firestoreConnect","collection","connect","ordered","NavBarMobile","onPusherClick","leftItems","rightItems","onToggle","visible","Sidebar","Pushable","as","Menu","animation","icon","inverted","vertical","Item","Link","to","Pusher","dimmed","onClick","minHeight","fixed","Image","size","Icon","position","NavBarChildren","Container","marginTop","NavBarDesktop","Header","content","NavBar","handlePusher","handleToggle","Responsive","onlyMobile","NavBarMoblie_NavBarMobile","NavBarChildren_NavBarChildren","minWidth","onlyTablet","NavBar_NavBarDesktop","App","react_redux_es","BrowserRouter","layout_NavBar","Switch","Route","exact","path","component","Boolean","location","hostname","match","ReactDOM","render","containers_App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.cb4238b6.chunk.js","sourcesContent":["import { createStore, combineReducers, compose } from 'redux';\r\nimport firebase from 'firebase';\r\nimport 'firebase/firestore';\r\nimport { reactReduxFirebase, firebaseReducer } from 'react-redux-firebase';\r\nimport { reduxFirestore, firestoreReducer } from 'redux-firestore';\r\n\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: \"AIzaSyC6rHHcP2S1RHoKZG8dZrcFIRX_T7Q4klY\",\r\n    authDomain: \"robot-friend-b4cd3.firebaseapp.com\",\r\n    databaseURL: \"https://robot-friend-b4cd3.firebaseio.com\",\r\n    projectId: \"robot-friend-b4cd3\",\r\n    storageBucket: \"robot-friend-b4cd3.appspot.com\",\r\n    messagingSenderId: \"202082833271\",\r\n    appId: \"1:202082833271:web:c1402d43dbc35061\"\r\n};\r\n\r\n// react-redux-firebase config\r\nconst rrfConfig = {\r\n    userProfile: 'users',\r\n    useFirestoreForProfile: true // Firestore for Profile instead of Realtime DB\r\n};\r\n\r\n// Init firebase instance\r\nfirebase.initializeApp(firebaseConfig);\r\n// Init firestore\r\nconst firestore = firebase.firestore();\r\nconst settings = { timestampsInSnapshots: true };\r\nfirestore.settings(settings);\r\n\r\n// Add reactReduxFirebase enhancer when making store creator\r\nconst createStoreWithFirebase = compose(\r\n    reactReduxFirebase(firebase, rrfConfig), // firebase instance as first argument\r\n    reduxFirestore(firebase)\r\n)(createStore);\r\n\r\nconst rootReducer = combineReducers({\r\n    firebase: firebaseReducer,\r\n    firestore: firestoreReducer,\r\n    // notify: notifyReducer,\r\n    // settings: settingsReducer\r\n});\r\n\r\n// Check for settings in localStorage\r\n// if (localStorage.getItem('settings') == null) {\r\n//     // Default settings\r\n//     const defaultSettings = {\r\n//         disableBalanceOnAdd: true,\r\n//         disableBalanceOnEdit: false,\r\n//         allowRegistration: false\r\n//     };\r\n//\r\n//     // Set to localStorage\r\n//     localStorage.setItem('settings', JSON.stringify(defaultSettings));\r\n// }\r\n\r\n// Create initial state\r\nconst initialState = {};\r\n\r\n// Create store\r\nconst store = createStoreWithFirebase(\r\n     rootReducer,\r\n    initialState,\r\n    compose(\r\n        reactReduxFirebase(firebase),\r\n        window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n    )\r\n);\r\n\r\nexport default store;\r\n","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nclass CreateRobot extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nCreateRobot.propTypes = {};\r\n\r\nexport default CreateRobot;\r\n","import React from 'react';\r\n\r\nconst Card = (props) =>{\r\n    return(\r\n        <div className='db center mw5 tc black link dim'>\r\n            <img className={'db ba b--black-10'} alt='robots' src={`https://robohash.org/${props.id}?200*200`}/>\r\n\r\n            <dl className=\"mt2 f6 lh-copy\">\r\n                <dt className=\"clip\">Title:</dt>\r\n                <dd className=\"ml0\">{props.name}</dd>\r\n                <dt className=\"clip\">Artist</dt>\r\n                <dd className=\"ml0 gray\">Email:{props.email}</dd>\r\n            </dl>\r\n        </div>\r\n    )\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from '../Card/card';\r\nimport _ from 'lodash'\r\n\r\nconst CardList = ({robots}) =>{\r\n    const cardComponent = _.map(robots , (robot) =>(\r\n        <Card\r\n            key={robot.id}\r\n            id={robot.id}\r\n            name={robot.name}\r\n            email ={robot.email}\r\n        />\r\n    ) );\r\n\r\n    return (\r\n        <div>\r\n           {cardComponent}\r\n        </div>\r\n    )\r\n};\r\n\r\n\r\n\r\n\r\n\r\nexport default CardList;","import React from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\n\r\nconst SearchBox = ({searchfield, searchChange})=>{\r\n\r\n    return(\r\n        <div className = 'pa2 '>\r\n\r\n            <input \r\n            className = 'pa3 ba b--green bg-lightest-blue'\r\n            type='search' \r\n            placeholder='Search for Robot friends'\r\n            onChange = {searchChange}\r\n            />\r\n        </div>    \r\n    )\r\n}\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport default SearchBox;","import React from 'react';\r\n\r\nconst Scroll = (props) => {\r\n    return (\r\n        <div style={{ overflow: 'scroll', border: '5px solid black', height: '800px'}}>\r\n            {props.children}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Scroll;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport CardList from \"../../components/CardList\";\r\nimport SearchBox from \"../../components/SearchBox\";\r\nimport {compose} from \"redux\";\r\nimport {firestoreConnect} from \"react-redux-firebase\";\r\nimport {connect} from \"react-redux\";\r\nimport _ from 'lodash';\r\nimport Scroll from '../../components/Scroll';\r\n\r\nclass DisplayRobot extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n            searchfield: \"\"\r\n        };\r\n    }\r\n    onSearchChange = event => {\r\n        this.setState({ searchfield: event.target.value });\r\n    };\r\n    render() {\r\n\r\n        const { clients } = this.props;\r\n        const filteredRobots =_.filter(clients, (robot)=>( robot.name.toLocaleLowerCase()\r\n            .includes(this.state.searchfield.toLocaleLowerCase())));\r\n        return (\r\n            <div>\r\n                <h1 className='f1'>Robot Friends</h1>\r\n                <Scroll>\r\n                <SearchBox searchChange={this.onSearchChange} />\r\n                <CardList robots={filteredRobots} />\r\n                </Scroll>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nDisplayRobot.propTypes = {};\r\n\r\nexport default compose(\r\n    firestoreConnect([{ collection: \"clients\" }]),\r\n    connect((state, props) => ({\r\n        clients: state.firestore.ordered.clients\r\n    }))\r\n)(DisplayRobot);\r\n","import _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport { Link } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Sidebar,\r\n    Responsive\r\n} from \"semantic-ui-react\";\r\n\r\n\r\nexport const NavBarMobile = ({\r\n                          children,\r\n                                 leftItems,\r\n                                 rightItems,\r\n                          onPusherClick,\r\n                          onToggle,\r\n\r\n                          visible\r\n                      }) => (\r\n    <Sidebar.Pushable>\r\n        <Sidebar\r\n            as={Menu}\r\n            animation=\"overlay\"\r\n            icon=\"labeled\"\r\n            inverted\r\n\r\n            vertical\r\n            visible={visible}\r\n        >\r\n\r\n                <Menu.Item as={Link} to='/home' >\r\n                    Home\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Link className=\"f6 f5-l link bg-animate black-80 hover-bg-light-green dib pa3 ph4-l\"\r\n                          to=\"/createRobot\" >Create Robot</Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Link className=\"f6 f5-l link bg-animate black-80 hover-bg-light-blue dib pa3 ph4-l\"\r\n                          to=\"/shop\">Shop</Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Link className=\"f6 f5-l link bg-animate black-80 hover-bg-light-pink dib pa3 ph4-l\"\r\n                          to=\"/about\">About</Link>\r\n                </Menu.Item>\r\n                <Menu.Item>\r\n                    <Link className=\"f6 f5-l link bg-animate black-80 hover-bg-light-yellow dib pa3 ph4-l\"\r\n                          to=\"/contact\">Contact</Link>\r\n                </Menu.Item>\r\n\r\n        </Sidebar>\r\n        <Sidebar.Pusher\r\n            dimmed={visible}\r\n            onClick={onPusherClick}\r\n            style={{ minHeight: \"100vh\" }}\r\n        >\r\n            <Menu fixed=\"top\" inverted>\r\n                <Menu.Item>\r\n                    <Image size=\"mini\" src=\"https://react.semantic-ui.com/logo.png\" />\r\n                </Menu.Item>\r\n                <Menu.Item onClick={onToggle}>\r\n                    <Icon name=\"sidebar\" />\r\n                </Menu.Item>\r\n                <Menu.Menu position=\"right\">\r\n\r\n                </Menu.Menu>\r\n            </Menu>\r\n            {children}\r\n        </Sidebar.Pusher>\r\n    </Sidebar.Pushable>\r\n);\r\n\r\n\r\n","\r\nimport _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport {Link } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Sidebar,\r\n    Responsive\r\n} from \"semantic-ui-react\";\r\n\r\nexport const NavBarChildren = ({ children }) => (\r\n    <Container style={{ marginTop: \"5em\" }}>{children}</Container>\r\n);","\r\nimport _ from \"lodash\";\r\nimport React, { Component } from \"react\";\r\nimport { render } from \"react-dom\";\r\nimport {Link } from 'react-router-dom';\r\nimport {\r\n    Container,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Sidebar,\r\n    Responsive,\r\n    Button\r\n} from \"semantic-ui-react\";\r\n\r\n\r\nconst NavBarDesktop = ({leftItems,rightItems}) => (\r\n    <Menu fixed=\"top\" inverted>\r\n        <Menu.Item>\r\n            <Image size=\"mini\" src=\"https://react.semantic-ui.com/logo.png\" />\r\n        </Menu.Item>\r\n        <Menu.Header>\r\n            <h1 className='f1'>Robot Friends</h1>\r\n        </Menu.Header>\r\n        <Menu.Menu position=\"right\">\r\n            <Link className=\"f12 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\r\n                  to=\"/home\" >Home</Link>\r\n            <Link className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\r\n                  to=\"/createRobot\" >Create Robot</Link>\r\n            <Link className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\r\n                  to=\"/viewRobot\" >View Robot</Link>\r\n            <Link className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\r\n                  to=\"/login \" >Login</Link>\r\n            <Link className=\"f6 f5-l link bg-animate  hover-bg-light-green dib pa3 ph4-l\"\r\n                  to=\"/signUp \" >Sign up</Link>\r\n\r\n        </Menu.Menu>\r\n    </Menu>\r\n);\r\nexport default NavBarDesktop;","import React, {Component} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport CreateRobot from '../../../containers/CreateRobot';\r\nimport {\r\n    Container,\r\n    Icon,\r\n    Image,\r\n    Menu,\r\n    Sidebar,\r\n    Responsive\r\n} from \"semantic-ui-react\";\r\nimport {NavBarMobile} from './NavBarMoblie'\r\nimport {NavBarChildren} from './NavBarChildren'\r\nimport NavBarDesktop from './NavBarDesktop'\r\n\r\nconst leftItems = [\r\n    { as: \"Link\", content: \"Home\", key: \"home\",to:'/home' },\r\n    { as: \"Link\", content: \"createRobot\", key: \"createRobot\",to:'/createRobot' }\r\n];\r\nconst rightItems = [\r\n    { as: \"Link\", content: \"Home\", key: \"home\",to:'/home'  },\r\n    { as: \"Link\", content: \"createRobot\", key: \"createRobot\",to:'/createRobot' }\r\n];\r\n\r\nclass NavBar extends Component {\r\n    state = {\r\n        visible: false\r\n    };\r\n\r\n    handlePusher = () => {\r\n        const { visible } = this.state;\r\n\r\n        if (visible) this.setState({ visible: false });\r\n    };\r\n\r\n    handleToggle = () => this.setState({ visible: !this.state.visible });\r\n    render() {\r\n        const { children } = this.props;\r\n        const { visible } = this.state;\r\n        return (\r\n\r\n            <div>\r\n                <Responsive {...Responsive.onlyMobile}>\r\n                    <NavBarMobile\r\n                        leftItems={leftItems}\r\n                        onPusherClick={this.handlePusher}\r\n                        onToggle={this.handleToggle}\r\n                        rightItems={rightItems}\r\n                        visible={visible}\r\n                    >\r\n                        <NavBarChildren>{children}</NavBarChildren>\r\n                    </NavBarMobile>\r\n                </Responsive>\r\n                <Responsive minWidth={Responsive.onlyTablet.minWidth}>\r\n                    <NavBarDesktop\r\n                        leftItems={leftItems}\r\n                        rightItems={rightItems}\r\n                    />\r\n                    <NavBarChildren>{children}</NavBarChildren>\r\n                </Responsive>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nNavBar.propTypes = {};\r\n\r\nexport default NavBar;\r\n","import React, { Component } from \"react\";\nimport './App.css'\nimport store from \"../../store\";\nimport { Provider } from \"react-redux\";\nimport CreateRobot from '../CreateRobot'\nimport DisplayRobot from '../DisplayRobot/index'\nimport {BrowserRouter as Router , Switch,Route} from \"react-router-dom\";\nimport NavBar from '../../components/layout/NavBar/index'\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n\n    };\n  }\n  // use arrow function to create a scope so that \"this\" refers to App object.\n  //Otherwise it points to event,which does not have this.state\n\n  render() {\n\n\n\n    return (\n\n      <Provider store={store}>\n          <Router>\n        <div className=\"tc\">\n            <NavBar>\n            <Switch>\n                <Route exact path='/home' component={DisplayRobot} />\n                <Route exact path='/createRobot' component={CreateRobot} />\n\n            </Switch>\n\n            </NavBar>\n        </div>\n          </Router>\n      </Provider>\n\n    );\n  }\n}\n\n\n\n export default App;\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './containers/App/App';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport 'tachyons';\r\n\r\n\r\n\r\nReactDOM.render(<App/>, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}